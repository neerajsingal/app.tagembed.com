{"version":3,"file":"static/js/4955.20a61bdb.chunk.js","mappings":"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","sources":["app/Layout/Main/CommonComponents/UpgradePop.js","app/Layout/Main/Moderation/SideMenu/index.js","app/Layout/Main/Feeds/ManualUpload/ManualHead.js"],"sourcesContent":["import React from 'react'\nimport { Image } from 'react-bootstrap'\nimport { baseUrl } from '../../../../Assets/AssetsHelper'\nimport { ModalBody, Modal } from \"react-bootstrap\";\nimport ReactPlayer from 'react-player';\n\nconst getDetails = () => {\n    let obj = {\n        heading: 'Auto Pilot',\n        description: `Want to create impressive widgets without spending hours? Auto-pilot is just the feature you need to sieve all the irrelevant posts within minutes! âš¡ Ready to explore? Upgrade your plan.`,\n        url: baseUrl(`media/products/auto-pilot-feature.mp4`),\n        btnText: ' Upgrade Now! ',\n        isVideo: true\n    }\n    return obj;\n}\nconst UpgradePop = ({ show, handleClose, navigate }) => {\n\n    const { heading, description, url, isVideo, btnText } = getDetails();\n\n    return (\n        <Modal show={show} onHide={handleClose} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n            <ModalBody className=\"p-8 socialwall-popup-body\">\n                <div className=\"row align-itmes-center\">\n                    <h2 className=\"font-weight-boldest w-100 text-center mt-0\">{heading}</h2>\n                    <p className=\"mb-5 text-dark text-center\">{description}</p>\n                    <div className=\"col-lg-12\">\n                        <div className=\"switch_image ugc-switch-video mb-4 w-100\">\n                            {!isVideo ? <Image isPrefix={true} className=\"img-fluid\" src={url} alt='' /> :\n                                <ReactPlayer height={300} id=\"bg_image\" className=\"object-fit-contain\" url={url} autoPlay={true} playing={true} loop={true} muted={true} controls={false} playsinline={true} />\n                            }\n                        </div>\n                    </div>\n                    <div className=\"col-lg-12\">\n                        <div className=\"switch_text_inner text-center\">\n                            <button onClick={() => { navigate('/price') }} className={`btn btn-primary btn-lg btn-min-w mt-2`}>{btnText}</button>\n                        </div>\n                    </div>\n                </div>\n            </ModalBody>\n        </Modal>\n    )\n}\n\nexport default UpgradePop","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '../../../../../Assets/AssetsHelper'\nimport { checkPermission } from '../../../../../actions/collaboratorActions';\nimport { useNavigate } from 'react-router-dom';\nimport UpgradePop from '../../CommonComponents/UpgradePop';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { PRODUCT_PLANS } from '../../../../../actions/constants';\n\nconst SideMenu = ({ getWallData }) => {\n  const { name, id } = getWallData || {}\n  const navigate = useNavigate()\n  const path = window.location.pathname;\n  const [pop, setPop] = useState(false)\n  const planId = useSelector((state) => state.authorized?.userData?.user_data?.UserPlan?.planId, shallowEqual)\n  const checkPlan = PRODUCT_PLANS.freePlan.includes(planId) || PRODUCT_PLANS.freeTrail.includes(planId)\n  const navigateHandler = (e, path, key) => {\n    e.stopPropagation()\n    if (checkPermission('networkManager', 'manageFeed', true) || [4, 5].includes(key)) navigate(path);\n  }\n  return (\n    <>\n      <div className=\"custom-side-menu-inn h-100\">\n        <div className=\"custom-side-menu-body\">\n          <p className=\"csm-title mb-0 pb-3 pb-sm-2 border-bottom\">CONTENT</p>\n          <ul className=\"list-unstyled\">\n            <li className={`py-3 border-bottom cursor-pointer ${path?.includes('addfeed') && !path?.split('/')?.includes('29') ? 'active' : ''}`} onClick={(e) => navigateHandler(e, `/content/addfeed/${id}`, 2)}>\n              <FontAwesomeIcon iconClass=\"me-2\" icon=\"square-plus\" />\n              <span>Add Feed</span></li>\n            {/* <li className={`py-3 border-bottom cursor-pointer ${path?.includes('moderation') ? 'active' : ''}`} onClick={(e) => navigateHandler(e, `/content/moderation/${id}`, 1)}>\n              <FontAwesomeIcon iconClass=\"me-2\" icon=\"image\" />\n              <span>Manage Content</span></li> */}\n            <li className={`py-3 border-bottom cursor-pointer ${path?.includes('managefeed') ? 'active' : ''}`} onClick={(e) => navigateHandler(e, `/content/managefeed/${id}`, 3)}>\n              <FontAwesomeIcon iconClass=\"me-2\" icon=\"rectangle-history-circle-plus\" />\n              <span>Manage Feeds</span></li>\n            <li className={`py-3 border-bottom cursor-pointer ${path?.includes('autopilot') ? 'active' : ''}`} onClick={(e) => checkPlan ? setPop(true) : navigateHandler(e, `/autopilot`, 4)}>\n              <FontAwesomeIcon iconClass=\"me-2\" icon=\"toggle-on\" />\n              <span>Auto Pilot</span></li>\n            <li className={`py-3 border-bottom cursor-pointer ${path?.split('/')?.includes('29') ? 'active' : ''}`} onClick={(e) => navigateHandler(e, `/content/addfeed/${id}/29`, 5)}>\n              <FontAwesomeIcon iconClass=\"me-2\" icon=\"messages\" />\n              <span>Review Hub</span></li>\n          </ul>\n        </div>\n        <div className=\"custom-side-menu-footer d-flex justify-content-end border-top\">\n          <div className=\"f-between w-100 gap-3\">\n            <button type=\"button\" id=\"\" className=\"w-100 btn btn-primary\" onClick={(e) => { e.stopPropagation(); navigate(`/publish/${id}`) }}>Publish</button>\n          </div>\n        </div>\n      </div>\n      {pop ? <UpgradePop show={pop} handleClose={() => setPop(false)} navigate={navigate}/> : null}\n    </>\n  )\n}\n\nexport default SideMenu","import { Component } from \"react\";\nimport { Button, Card, Col, Container, Image, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { baseUrl, FontAwesomeIcon } from \"../../../../../Assets/AssetsHelper\";\nimport { generateRandomArray, GET_NETWORK_ICON, GET_NETWORK_NAME, shopifyApp } from \"../../../../../utils\";\nimport withRouter from \"../../../../routes/WithRouter\";\nimport SideMenu from \"../../Moderation/SideMenu\";\nimport { connect } from \"react-redux\";\nimport { GET_ADD_FEED } from \"../../../../../actions/moderationActions\";\n\nclass ManualHead extends Component{\n    state={\n        networkList:[],\n        loader:true\n    }\n    \n    componentDidMount(){\n        const {networks, getNetworks} = this.props\n        if(!networks) getNetworks()\n        else this.setNetworks()\n    }\n\n    setNetworks = () => {\n        const {networks} = this.props\n        const tabs = networks?.find(net=> net.id == 0)\n        this.setState({loader:false, networkList: tabs?.access ? tabs?.networkTab : []})\n    }\n\n    componentDidUpdate(prevProps){\n        const { networks } = prevProps\n        if(networks != this.props.networks) this.setNetworks()\n    }\n\n    render(){\n        const {loader, networkList} = this.state\n        const { onBoarding, setNetwork, navigate } = this.props\n        return (\n            <>\n                <div className=\"custom-side-menu d-flex\">\n                {!shopifyApp() ? <SideMenu {...{getWallData:{id: localStorage.getItem('wallId')}}}/> : null}\n                <div className=\"custom-main-content\"  style={{ width: shopifyApp() ? \"100%\" : null, marginLeft: shopifyApp() ? \"0\" : null }}>\n                <div className='d-flex flex-column flex-column-fluid w-100 py-5 manual_upload_'>\n                    {/* {!onBoarding ? <div className=\"subheader\">\n                        <Container fluid>\n                            <div className='d-flex align-items-center'>\n                                <Link to={`/content/addfeed/${localStorage.getItem('wallId')}`} className=\"btn btn-icon bg-gray-100 btn-sm me-2\" title='Upload Feed'><FontAwesomeIcon icon={'angle-left'} iconClass={'me-0'}/></Link>\n                                <h1 className=\"me-2 h4 my-3\">Upload Feed</h1>\n                            </div>\n                        </Container>\n                    </div> : null} */}\n                    <Container>\n                        <Card className={`${onBoarding?'shadow-none border-0':''}`}>\n                            <Card.Body className='f-center flex-column manual_upload_card'>\n                                <h3 className='text-center mb-3'>Manual Uploads</h3>\n                                <p className='text-center mb-8'>Upload content directly to the feed via device or by adding a post URL from Instagram or TikTok </p>\n                                <div className='f-center flex-wrap w-100 flex-column'>\n                                    {!loader ? \n                                    <Row className='w-100' style={{maxWidth:600}}>\n                                        {/* <Col>\n                                            <Button variant='outline-secondary' onClick={() => onBoarding ? setNetwork(0) : navigate(`/manual-upload/feed?network=0`)} className='btn btn-outline-secondary w-100 rounded-1 f-center flex-column p-7 mb-4'>\n                                                <p className='display-2 mb-3'>\n                                                    <FontAwesomeIcon type={'light'} icon={'laptop'} iconClass={'me-0'}/>\n                                                </p>\n                                                <p className='mb-0 fs-10 fw-medium'>My Device</p>\n                                            </Button>\n                                        </Col> */}\n\n                                        {networkList.length > 0 ? networkList.map(network =><Col>\n                                            <Button variant='outline-secondary' onClick={() => onBoarding ? setNetwork(network.networkId) : navigate(`/manual-upload/feed?network=${network.networkId}`)} className='btn btn-outline-secondary w-100 rounded-1 f-center flex-column p-7 mb-4'>\n                                                <p className='display-2 mb-3'>\n                                                    {network.networkId == 0 ? <FontAwesomeIcon type={'light'} icon={'laptop'} iconClass={'me-0'}/> : \n                                                    <Image src={baseUrl(`media/icons/social-icons-square/${GET_NETWORK_ICON(network.networkId)}.svg`)} height={36} width={36} fluid/>}\n                                                </p>\n                                                <p className='mb-0 fs-10 fw-medium'>{network.networkId == 0 ? \"My Device\" : GET_NETWORK_NAME(network.networkId)}</p>\n                                            </Button>\n                                        </Col>) : null}\n                                        <div className=\"d-flex justify-content-center mt-4\">\n                                        <Link to={`/content/addfeed/${localStorage.getItem('wallId')}`} className=\"text-decoration-underline text-muted p-2\" title='Upload Feed'>\n                                        <FontAwesomeIcon icon={'arrow-left'} iconClass={'me-2'}/>\n                                        Back</Link>\n                                        </div>\n                                    </Row> \n                                    :\n                                    <Row className='w-100' style={{maxWidth:600}}>\n                                    {generateRandomArray(3).map((_, index) => <Col>\n                                        <div key={index} className=\"btn btn-outline-secondary w-100 rounded-1 f-center flex-column p-7 mb-4 d-flex\">\n                                            <div className=\"sk_rect h-40px w-40px mb-3\"></div>\n                                            <div className=\"sk_line h-10px mb-1 w-75\"></div>\n                                        </div>\n                                        </Col>)}\n                                    </Row>\n                                    }\n                                    {onBoarding ? \n                                        <div className=\"f-center\">\n                                            <Button variant='link' className=\"text-decoration-underline\" onClick={() => this.props.onBack('c_n')}>\n                                                Choose another Network\n                                            </Button>\n                                        </div>: null}\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Container>\n                </div>\n                </div>\n                </div>\n            </>\n        )\n        \n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        networks: state.addFeedReducer?.addFeedNetworks?.networks,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getNetworks: (callback) => dispatch(GET_ADD_FEED(callback)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ManualHead))"],"names":["_ref","show","handleClose","navigate","heading","description","url","isVideo","btnText","baseUrl","_jsx","Modal","onHide","size","centered","children","ModalBody","className","_jsxs","ReactPlayer","height","id","autoPlay","playing","loop","muted","controls","playsinline","Image","isPrefix","src","alt","onClick","_path$split","_path$split2","getWallData","name","useNavigate","path","window","location","pathname","pop","setPop","useState","planId","useSelector","state","_state$authorized","_state$authorized$use","_state$authorized$use2","_state$authorized$use3","authorized","userData","user_data","UserPlan","shallowEqual","checkPlan","PRODUCT_PLANS","freePlan","includes","freeTrail","navigateHandler","e","key","stopPropagation","checkPermission","_Fragment","concat","split","FontAwesomeIcon","iconClass","icon","type","UpgradePop","ManualHead","Component","constructor","arguments","networkList","loader","setNetworks","networks","this","props","tabs","find","net","setState","access","networkTab","componentDidMount","getNetworks","componentDidUpdate","prevProps","render","onBoarding","setNetwork","shopifyApp","SideMenu","localStorage","getItem","style","width","marginLeft","Container","Card","Body","Row","maxWidth","generateRandomArray","map","_","index","Col","length","network","Button","variant","networkId","GET_NETWORK_ICON","fluid","GET_NETWORK_NAME","Link","to","title","onBack","connect","_state$addFeedReducer","_state$addFeedReducer2","addFeedReducer","addFeedNetworks","dispatch","callback","GET_ADD_FEED","withRouter"],"sourceRoot":""}