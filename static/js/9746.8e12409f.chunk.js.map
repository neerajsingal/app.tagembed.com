{"version":3,"file":"static/js/9746.8e12409f.chunk.js","mappings":"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","sources":["app/Layout/Main/Moderation/ContentModal/Elements/TagProducts.js","app/Layout/Main/Moderation/ContentModal/Elements/ContentModalAside.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Form, Button, Col, Row, InputGroup, Dropdown, Badge, Image } from 'react-bootstrap';\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\nimport ImageType from '../../../CommonComponents/MediaType/ImageType';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { ACTION_PRODUCT_LIST_FORTAG, PRODUCT_TAGS_AUTOSEARCH, fetchProductList } from '../../../../../../actions/productAction';\nimport { REMOVE_TAGGED_PRODUCT_ACTION, TAG_PRODUCT_ACTION } from '../../../../../../actions/moderationActions';\nimport { SEARCH_BY_PRODUCTS } from '../../../../../../reducer/keys';\nimport { getUserInfo_afterChanges } from '../../../../../../actions/loginActions';\nimport { GET_LOCAL, SET_LOCAL, TOAST_ERROR, check_hotspotLocation, debounce } from '../../../../../../utils';\nimport { checkPermission } from '../../../../../../actions/collaboratorActions';\nimport { Loader } from '../../../CommonComponents/Loader';\nimport { color } from '@uiw/react-codemirror';\nimport ContactModal from '../../../PricePlan/Elements/ContactModal';\nimport withRouter from '../../../../../routes/WithRouter';\n\nclass TagProducts extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { postproduct: [], tagedprod: [], showProd: false, showtags: false, searchTag: '', loadingTag: false, productTags: [], selectedTag: [], productId: 0, errorMsg: '', searchText: '', currentPage: 1, loading: false, scrolledToBottom: false, sentReq: false, visenzeId: null, visenzeProduct: null, firstTime: false, productList: [], showContactUs: false, type: \"\", prodClick: true }\n        this.outsideNewRef = React.createRef();\n        this.outsideNewRef2 = React.createRef();\n        this.listRef = React.createRef();\n        this.tagProductRef = React.createRef();\n        this.debouncedTriggerAction = debounce(this.triggerAction.bind(this), 500);\n        this.debouncedProductTagsSearch = debounce(this.productTagsSearchLogic, 500);\n    }\n\n    componentDidMount() {\n        const { modalData, activeCarousalPostsList } = this.props;\n        window.addEventListener('scroll', this.handleScroll);\n        window.addEventListener('click', this.handleClickOutside);\n        window.addEventListener('click', this.handleClickOutsideTagProduct);\n        this.setState({ postproduct: activeCarousalPostsList ? activeCarousalPostsList : modalData.postproduct })\n    }\n\n\n    setLastSearchTag = () => {\n        this.setState(prevState => ({ loading: false, productList: [...prevState.productList] }));\n    }\n\n    componentWillUnmount() {\n        if (this.searchTimeout) { clearTimeout(this.searchTimeout); }\n        window.removeEventListener('scroll', this.handleScroll);\n        window.removeEventListener('click', this.handleClickOutside);\n        window.removeEventListener('click', this.handleClickOutsideTagProduct);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        const { modalData, activeCarousalPostsList, activeCarousalPost } = this.props\n        const { searchText, postproduct } = this.state\n\n        if (searchText !== prevState.searchText) {\n            this.debouncedTriggerAction();\n            // if (this.searchTimeout) { clearTimeout(this.searchTimeout); }\n            // this.searchTimeout = setTimeout(() => {\n            //     this.triggerAction();\n            // }, 800);\n        }\n\n        if (activeCarousalPost) {\n            if (activeCarousalPostsList?.length != postproduct?.length) this.setState({ postproduct: activeCarousalPostsList })\n        } else {\n            if (modalData?.postproduct?.length != postproduct?.length) this.setState({ postproduct: modalData.postproduct })\n        }\n    }\n\n    handleClickOutsideTagProduct = (event) => {\n        if (this.tagProductRef && !this.tagProductRef?.current?.contains(event.target)) { this.setState({ showtags: false }); }\n    };\n\n    handleClickOutside = (event) => {\n        if (this.outsideNewRef.current && !this.outsideNewRef.current?.contains(event.target)) this.setState({ showProd: false });\n    };\n\n\n    filterProduct = (e) => {\n        const keyword = e.target.value;\n        this.setState({ searchText: keyword });\n    }\n\n    checkTour = async () => {\n        const tourStep = GET_LOCAL('tourStep');\n        const isTourComplete = GET_LOCAL('isTour') ?? true;\n        const { default: appTour } = await import('../../../../../../actions/appTour')\n        const { tour } = new appTour(this.props.navigate, false, this.props.dispatch);\n        if (!isTourComplete && tourStep?.id == '#search_pro_select') {\n            SET_LOCAL('tourStep', { id: \"#tag_products_0\", step: 8 });\n            setTimeout(() => tour.highlight({ element: '#tag_products' }), 400);\n        } else if(tourStep?.id == '#tag_products_0'){\n            SET_LOCAL('tourStep', { id: \"#hotspot-section\", step: 8 });\n            setTimeout(() => tour.drive(tourStep?.step ?? 8), 400);\n        }\n    }\n\n    triggerAction = (firstClick) => {\n        const { searchText, selectedTag, prodClick } = this.state;\n        const { SEARCH_PRODUCTS_TEXT, fetchProductList, modalData } = this.props;\n\n        if (firstClick && prodClick) {\n            this.setState({ loading: true, prodClick: false })\n            fetchProductList(1, 10, selectedTag, '', this.responceApi, modalData?.referenceId, modalData?.newMedia || modalData?.postFile);\n        }\n\n        else if (searchText?.length >= 1) {\n            this.setState({ showProd: true, loading: true, productList: [] });\n            SEARCH_PRODUCTS_TEXT(searchText);\n            fetchProductList(1, 10, selectedTag, searchText, this.responceApi, modalData?.referenceId, modalData?.newMedia || modalData?.postFile);\n        } else if (!searchText) {\n            this.setState({ showProd: true, loading: true, productList: [] });\n            SEARCH_PRODUCTS_TEXT('');\n            fetchProductList(1, 10, selectedTag, '', this.responceApi, modalData?.referenceId, modalData?.newMedia || modalData?.postFile);\n        }\n    }\n\n    responceApi = (data) => {\n        // if(data?.length > 0) this.checkTour();\n        this.setState(prevState => ({ loading: false, productList: data?.length > 0 ? [...data] : [] }));\n    }\n\n    removeTag = (tagToRemove) => {\n        const updatedSelectedTag = this.state.selectedTag.filter(tag => tag !== tagToRemove);\n        this.setState({ selectedTag: updatedSelectedTag, searchTag: '', showtags: false, productTags: [] }, () => this.props.fetchProductList(1, 10, this.state.selectedTag, '', this.responceApi, this.props.modalData?.referenceId, this.props.modalData?.newMedia || this.props.modalData?.postFile))\n    }\n\n    product_tags_search = (e) => {\n        const keyword = e.target.value;\n        this.setState({ loadingTag: true, showtags: keyword?.length > 0, searchTag: keyword }, () => this.debouncedProductTagsSearch(keyword))\n\n    }\n    productTagsSearchLogic = (keyword) => {\n        PRODUCT_TAGS_AUTOSEARCH(keyword)\n            .then((response) => {\n                const { responseCode, responseData } = response.data;\n                if (responseCode === 200) {\n                    this.setState({\n                        productTags: responseData,\n                        showtags: responseData && responseData.length > 0,\n                        loadingTag: false\n                    });\n                }\n            })\n            .catch((error) => {\n                console.error('Error fetching product tags:', error);\n                this.setState({ loadingTag: false });\n            });\n    };\n\n    getData_bySelected_Tag = (tag) => {\n        var tags = [...this.state.selectedTag, tag]\n        this.setState({ selectedTag: [...new Set(tags)], showtags: false, searchTag: '' },\n            () => {\n                this.props.fetchProductList(1, 10, this.state.selectedTag, '', this.responceApi, this.props.modalData?.referenceId, this.props.modalData?.newMedia || this.props.modalData?.postFile);\n            }\n        )\n    }\n\n    handleScroll = () => {\n        const listElement = this.listRef.current;\n        if (listElement) {\n            const rect = listElement.getBoundingClientRect();\n            if (rect.bottom <= window.innerHeight) {\n                this.setState({ scrolledToBottom: true }, () => { this.filterProductOnScrolle(); });\n            }\n        }\n    };\n\n    addProduct = (product, referenceId) => {\n        const { modalData, activeCarousalPost } = this.props;\n        let check_hot = modalData?.postproduct && modalData?.postproduct.length > 0 ? check_hotspotLocation(modalData) : '45%';\n        const location_hotspot = { 'left': `45%`, 'top': `${check_hot}` }\n        const hostpot = `left:45%;top:${check_hot};`\n        const productIds = modalData?.postproduct.length > 0 ? modalData?.postproduct.map(item=>item.product.shopify_product_id.toString()) : []\n        productIds.push(product.shopify_product_id)\n        this.props.TAG_PRODUCT_ACTION(productIds, product, activeCarousalPost ? activeCarousalPost : referenceId, location_hotspot, hostpot, modalData?.feedId, this.callbackMsg)\n        this.setState({ firstTime: true })\n        this.setState({ showProd: false });\n    }\n\n    changePrdId = (id) => {\n        this.setState({ productId: id })\n    }\n\n    callbackMsg = (data) => {\n        const { activeCarousalPost, updateCarousalPost, carousalPostsList } = this.props;\n        //this.checkTour();\n        if (activeCarousalPost) updateCarousalPost(activeCarousalPost, carousalPostsList, data, 1)\n    }\n\n\n    filterProductOnScrolle = () => {\n        const { total_pages } = this.props;\n        if (this.state.currentPage < total_pages && !this.state.sentReq) this.setState({ currentPage: this.state.currentPage + 1, sentReq: true }, () => this.props.ACTION_PRODUCT_LIST_FORTAG(this.state.currentPage, 10, this.state.selectedTag, this.state.searchText, this.completedPageCall, this.props.modalData?.referenceId, this.props.modalData?.newMedia || this.props.modalData?.postFile))\n    }\n\n    completedPageCall = (data) => this.setState(prevState => ({ sentReq: false, productList: [...prevState.productList, ...data] }));\n\n    callbackRemove = (id) => {\n        const { activeCarousalPost, updateCarousalPost, carousalPostsList } = this.props\n        if (activeCarousalPost) updateCarousalPost(activeCarousalPost, carousalPostsList, id, 2)\n    }\n\n    removeTaggProduct = (product_sku, productId, referenceId, id) => {\n        if (checkPermission('contentGallery', 'editGallery', true)){\n            const { modalData } = this.props\n            const productIds = modalData?.postproduct.map(item=>item.product.shopify_product_id.toString())\n            this.props.REMOVE_TAGGED_PRODUCT_ACTION(productIds, product_sku, productId, referenceId, id, this.callbackRemove);\n        }\n    };\n\n\n    clickToShowContact = (status, type) => this.setState({\n        showContactUs: status,\n        type\n    })\n\n\n    render() {\n        const { showProd, selectedTag, productTags, showtags, searchTag, postproduct, loadingTag, errorMsg, searchText, sentReq, loading, productList, showContactUs, type, prodClick } = this.state\n        const { modalData, changeHotspotStatus, enableHotspot, user, activeCarousalPost } = this.props\n\n        const getCarousal = modalData?.imageList?.find((e) => e.referenceId == activeCarousalPost)\n        if (getCarousal) modalData.type = getCarousal.type\n\n        return (<div className=\"\">\n            <div className='p-4 p_tags_height'>\n                {!(modalData.type == 5 || modalData.type == 3 || modalData.type == 1) ?\n                    <Form.Group className='mb-3'>\n                        <Form.Check type=\"switch\" id=\"enable_hotspot\" className=\"f-between\" label=\"Enable Hotspot\" defaultValue={enableHotspot} onChange={() => checkPermission('contentGallery', 'editGallery', true) ? changeHotspotStatus(activeCarousalPost ? getCarousal.hotspot : modalData.hotspot, activeCarousalPost ? activeCarousalPost : modalData.referenceId) : {}} checked={enableHotspot} reverse />\n                    </Form.Group>\n                    : ''}\n\n\n                <Dropdown show={true} className='position-relative w-100 mb-3' align={'end'}>\n                    <Dropdown.Toggle variant=\"outline-secondary\" className={`arrow_disabled p-0 border-0 mb-0 flex-grow-1 w-100 bg-transparent`}>\n                        <InputGroup>\n                            <Form.Control id=\"search_pro_\" className={errorMsg ? 'is-invalid' : ''} placeholder=\"Search Products By name, category, SKU, tags\" ref={this.outsideNewRef} onChange={this.filterProduct} value={searchText} autoComplete='off' onClick={() => this.setState({ showProd: !showProd, currentPage: 1 }, () => { if (prodClick) this.triggerAction(true) })} />\n                            <InputGroup.Text>\n                                <FontAwesomeIcon type={'solid'} icon={'magnifying-glass'} />\n                            </InputGroup.Text>\n                        </InputGroup>\n                    </Dropdown.Toggle>\n                    {errorMsg ? <span className=\"invalid-feedback\">{errorMsg}</span> : null}\n\n\n                    {loading ?\n                        <div className='w-100 dropdown-menu show dropdown-menu-end' style={{ minHeight: '320px' }} >\n                            <Loader bg={'white'} />\n                        </div>\n                        :\n                        showProd && productList && productList?.length > 0 ? <Dropdown.Menu show={showProd && productList ? true : false} className='w-100' >\n                            <div className='w-100' id={`tag_products`} style={{ overflowX: 'auto', maxHeight: 320 }} ref={this.listRef} onScroll={this.handleScroll}>\n                                {productList.map((item, index) => {\n                                    const proImage = item?.product_image?.includes('?') ? `https://cdn.taggbox.com/v7/${item?.product_image}&w=100` : `https://cdn.taggbox.com/v7/${item?.product_image}?w=100`\n                                    return (<Dropdown.Item key={index} id={`tag_products_${index}`} data-item=\"product\" onClick={() => checkPermission('contentGallery', 'editGallery', true) ? this.addProduct(item, modalData.referenceId) : {}} className='d-flex'>\n                                        <div className=\"w-64px d-flex flex-shrink-0 me-2\">\n                                            <ImageType mediaClass={'position-relative overflow-hidden w-100 border rounded-1'} size={100} height={64} width={64} url={proImage} alt={\"\"} isCover={true} />\n                                        </div>\n                                        <div className=\"d-flex align-items-start flex-column overflow-hidden w-100\">\n                                            <p className=\"fs-9 fw-medium mb-1 text-wrap \">{item.product_title}</p>\n                                            <span className=\"d-flex align-items-center tb_pro_price mb-1\">\n                                                {(item.product_price && item.product_price > 0) ?\n                                                    <span className='fs-8 fw-bold'>{item.price_currency_symbol}{item.product_discount > 0 ? item.product_discount : item.product_price}</span>\n                                                    :\n                                                    ''}\n                                                {(item.product_price && item.product_discount > 0 && item.product_discount < item.product_price) ?\n                                                    <span className='fs-8 ms-2 text-muted' style={{ textDecoration: 'line-through' }}>{item.price_currency_symbol}{item.product_price}</span>\n                                                    : null}\n                                            </span>\n                                            {item.recomended ?\n                                                <div className='f-between mt-2 w-100'>\n                                                    <Badge bg='primary' className='rounded-pill bg-transparent text-primary border border-primary'><FontAwesomeIcon icon={'sparkles'} iconClass={'me-1'} /> Ai-Recommended</Badge>\n                                                    <div className='position-relative' style={{ marginRight: -5 }}>\n                                                        <Image src={baseUrl('media/svg/trusense.svg')} height={20} width={100} alt='trueSense' fluid />\n                                                    </div>\n                                                </div>\n                                                :\n                                                <p className='fs-10 text-muted mb-0'>\n                                                    {item.shopify_product_type ? <div> Category:  {item.shopify_product_type}</div> : ''}\n                                                </p>\n                                            }\n                                        </div>\n                                    </Dropdown.Item>);\n                                })}\n                            </div>\n                            <hr />\n                            <Dropdown.Item className='f-center' id=\"add_product\" href={`/content/products`}>\n                                <FontAwesomeIcon type={'solid'} icon={'plus'} iconClass={'me-1'} />\n                                Upload New Products\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                            :\n                            <></>\n                    }\n                </Dropdown>\n                <div className='position-relative'>\n                    <Form.Group className='mb-3'>\n                        <Form.Control id=\"search_pro_\" className={errorMsg ? 'is-invalid' : ''} placeholder=\"Search with multiple tags\" onChange={this.product_tags_search} value={searchTag} autoComplete='off' />\n                    </Form.Group>\n                    {showtags && productTags ?\n                        <Dropdown.Menu show={true} className='w-100'>\n                            {productTags.map((tag, index) => {\n                                return <Dropdown.Item className='f-center overflow-hidden' key={`prd_tags_${index}`} onClick={() => this.getData_bySelected_Tag(tag)}>\n                                    <p className='fs-10 text-muted text-ellipsis mb-0'>{tag}</p>\n                                </Dropdown.Item>\n                            })}\n                        </Dropdown.Menu>\n                        : ''}\n                </div>\n                <div className=\"mb-3 mb-xl-4\">\n                    <div className=\"tags-group d-flex align-items-center flex-wrap overflow-hidden w-100\">\n                        {selectedTag && selectedTag.length > 0 ? selectedTag.map((selectedTag, i) => {\n                            return <Badge key={selectedTag.toString()} className=\"me-1 mb-1 px-3 py-2 f-center bg-secondary overflow-hidden\">\n                                <span className=' text-break text-wrap text-start'>{selectedTag}</span>\n                                <Button variant='link' size='sm' className=\"p-0 ms-1 text-gray-800\" onClick={() => this.removeTag(selectedTag)}>\n                                    <FontAwesomeIcon type={'solid'} icon={'xmark'} />\n                                </Button>\n                            </Badge>\n                        })\n                            :\n                            ''}\n                    </div>\n                </div>\n\n                {postproduct && postproduct?.length > 0 ?\n                    postproduct.map((Item, index) => {\n                        return <div key={index} className='p-2 box-shadow mb-2 rounded-2 d-flex align-items-center position-relative border'>\n                            <span className='position-absolute start-0 translate-middle h-18px w-18px rounded-circle f-center bg-dark text-gray-100 top-50 fs-10 fw-medium' style={{ zIndex: 1 }}>{index + 1}</span>\n                            <div className='d-flex flex-grow-1 align-items-center overflow-hidden' style={{ maxWidth: 'calc(100% - 32px)' }}>\n                                <div className=\"w-44px d-flex flex-shrink-0 me-2\">\n                                    <ImageType mediaClass={'position-relative overflow-hidden w-100 border rounded-1'} size={100} height={44} width={44} url={Item?.product?.product_image} alt={\"\"} isCover={true} />\n                                </div>\n                                <div className=\"d-flex align-items-start flex-column overflow-hidden w-100\">\n                                    <p className=\"fs-9 fw-medium mb-1 text-wrap text-break\">{Item?.product?.product_title || \"\"}</p>\n                                    <div className=\"d-flex align-items-center mb-1\">\n                                        {Item.product.product_discount != 0 && Item.product.product_discount != Item.product.product_price ?\n                                            <span className='fs-8 fw-bold me-2'>{Item.product.discount_currency_symbol}{Math.trunc(Item.product.product_discount * 100) / 100}</span>\n                                            :\n                                            <span className='fs-8 fw-bold me-2'>{Item.product.discount_currency_symbol}{Math.trunc(Item.product.product_price * 100) / 100}</span>}\n                                        {(Item.product.product_discount && Item.product.product_discount > 0) ? <span className='fs-8 text-muted' style={{ textDecoration: 'line-through' }}>{Item.product.discount_currency_symbol}{Item.product.product_discount > 0 ? Item.product.product_price : ''}</span> : ''}\n                                    </div>\n                                </div>\n                            </div>\n                            <Button variant=\"icon\" size=\"sm\" className=\"btn-active-danger\" aria-label=\"delete\" onClick={() => this.removeTaggProduct(Item.product.product_sku, Item.product.id, Item.post_id, Item.id)}>\n                                <FontAwesomeIcon type={'solid'} icon={'trash-can'} />\n                            </Button>\n                        </div>\n                    }) :\n                    <div className='f-center py-3 text-gray-300 mb-10'>\n                        <span className='h-40px w-40px rounded-circle me-2 border f-center fs-4'><FontAwesomeIcon type={'light'} icon={'bag-shopping'} /></span>\n                        No Products Tagged Yet\n                    </div>\n                }\n\n                {![142738, 142737].includes(user.id) ? <div className='d-flex align-items-center badge-light-primary px-3 py-4 rounded-2 mt-2'>\n                    <p className='fs-7 text-gray-800 pe-3 mb-0'>\n                        Get rid of manual product tagging with AI\n                        <FontAwesomeIcon icon={'sparkle'} iconClass=\"ms-1 text-warning\" />\n                    </p>\n                    <Button className=\"text-nowrap\" onClick={() => this.clickToShowContact(true, \"Tag Product Talk to sales\")}>\n                        Talk to sales\n                    </Button>\n                </div> : null}\n                <ContactModal type={type} show={showContactUs} onCloseModel={() => this.clickToShowContact(false, \"\")} />\n                <div>\n                </div>\n            </div>\n            {/* <h3 className=\"p-4 fs-8 f-between mb-0 border-top\">\n                    <span className=\"fw-medium\">Suggested Products</span>\n                    <Badge bg='primary' className='rounded-pill bg-transparent text-primary border border-primary'>Ai-Recommended</Badge>\n                </h3>\n                <div className='mb-3'>\n                    <div className='overflow-auto px-4 pt-1' style={{maxHeight:340}}>\n                        <div class=\"p-2 box-shadow mb-2 rounded-2 d-flex align-items-center position-relative border\">\n                            <div className=\"d-flex flex-grow-1 align-items-center\">\n                                <div className=\"w-60px d-flex flex-shrink-0 me-2\">\n                                    <ImageType mediaClass={'position-relative overflow-hidden w-100 border rounded-1'} size={100} height={60} width={60} url={'https://lh3.googleusercontent.com/d/1ngv3ZqRrow25w-jc62ZlOaWbWGe6TkWi=s220?authuser=0'} alt={\"\"} />\n                                </div>\n                                <div className=\"d-flex align-items-start flex-column overflow-hidden w-100\">\n                                    <p className=\"fs-9 fw-medium mb-1 text-wrap \">Apple iPhone 12</p>\n                                    <div className=\"d-flex align-items-center tb_pro_price mb-1\">\n                                        <span className='fs-8 text-muted' style={{textDecoration:'line-through'}}>$1349</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <Button variant=\"icon\" size=\"sm\" className=\"btn-active-primary rounded-circle h-24px w-24px\">\n                                <FontAwesomeIcon icon={'plus'}/>\n                            </Button>\n                        </div>\n                        <div class=\"p-2 box-shadow mb-2 rounded-2 d-flex align-items-center position-relative border\">\n                            <div className=\"d-flex flex-grow-1 align-items-center\">\n                                <div className=\"w-60px d-flex flex-shrink-0 me-2\">\n                                    <ImageType mediaClass={'position-relative overflow-hidden w-100 border rounded-1'} size={100} height={60} width={60} url={'https://lh3.googleusercontent.com/d/1ngv3ZqRrow25w-jc62ZlOaWbWGe6TkWi=s220?authuser=0'} alt={\"\"} />\n                                </div>\n                                <div className=\"d-flex align-items-start flex-column overflow-hidden w-100\">\n                                    <p className=\"fs-9 fw-medium mb-1 text-wrap \">Apple iPhone 12</p>\n                                    <div className=\"d-flex align-items-center tb_pro_price mb-1\">\n                                        <span className='fs-8 text-muted' style={{textDecoration:'line-through'}}>$1349</span>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"bg-success text-gray-100 f-center rounded-circle h-24px w-24px\">\n                                <FontAwesomeIcon icon={'check'}/>\n                            </div>\n                        </div>\n                    </div>\n                </div> */}\n        </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        total_pages: state.products?.total_pages,\n        searchProducts: state.products?.searchProducts,\n        loadingTagProduct: state.products?.loadingTagProduct,\n        moderation: state.moderation,\n        ctaData: state.ctaData?.data,\n        user: state.authorized?.userData?.user_data?.user,\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        SEARCH_PRODUCTS_TEXT: (text) => dispatch(({ type: SEARCH_BY_PRODUCTS, payload: text })),\n        ACTION_PRODUCT_LIST_FORTAG: (page, showPost, tag, search, callBack, referenceId, newMedia) => dispatch(ACTION_PRODUCT_LIST_FORTAG(page, showPost, tag, search, callBack, referenceId, newMedia)),\n        TAG_PRODUCT_ACTION: (productIds, product, referenceId, location_hotspot, hostpot, feedId, callBack) => dispatch(TAG_PRODUCT_ACTION(productIds, product, referenceId, location_hotspot, hostpot, feedId, callBack)),\n        REMOVE_TAGGED_PRODUCT_ACTION: (productIds, product_sku, productId, referenceId, id, callBack) => dispatch(REMOVE_TAGGED_PRODUCT_ACTION(productIds, product_sku, productId, referenceId, id, callBack)),\n        // ENABLE_HOTSPOT_ACTION: (id, referenceId, callBack) => dispatch(ENABLE_HOTSPOT_ACTION(id, referenceId, callBack)),\n        getUserInfo_afterChanges: () => dispatch(getUserInfo_afterChanges()),\n        fetchProductList: (page, showPost, tag, search, callBack, referenceId, newMedia) => dispatch(fetchProductList(page, showPost, tag, search, callBack, referenceId, newMedia)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TagProducts));","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport ReactHtmlParser from 'react-html-parser';\nimport HtmlParser from 'react-html-parser';\nimport { Nav, Tab, Table, Badge, Image, Button } from 'react-bootstrap';\nimport { GET_NETWORK_ICON, MEDIA_REPLACE_URL, GET_NETWORK_NAME, SENTIMENTS_CALC, getPlainText, addLineBreaks } from '../../../../../../utils';\n// import { postPostUpdateAction, loadAssetsDataWithDispatch, tagsFilter } from '../../../../Services/Actions/assetsActions'\nimport { baseUrl, FontAwesomeIcon } from '../../../../../../Assets/AssetsHelper';\nimport Author from '../../../CommonComponents/Author/Author';\nimport TagProducts from './TagProducts';\nimport Rating from '../../../CommonComponents/Rating';\nimport { MediaBaseUrl } from '../../../../../../actions/api';\n\nclass ContentModalAside extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //tagString:['#macdonald', 'Restaurant', 'Burger', '#macdonaldUSA', 'California', '#starbucks', 'Restaurant'],\n            descriptionEditable: false,\n            addTagButton: true,\n            //tagInputValue : ''\n            tagString: [],\n            newTag: \"\",\n            listTags: [],\n            selectedOption: null,\n            content: \"\",\n            changesStatus: false\n        };\n\n        this.editorEnable = React.createRef();\n        this.editorEnableButton = React.createRef();\n    }\n\n    onClickToRemoveTag = (index) => event => {\n        let { tagString } = this.state;\n        tagString.splice(index, 1)\n        this.setState({ tagString, changesStatus: true })\n\n    }\n\n    componentWillMount() {\n        const { tagList } = this.props\n        if (tagList && tagList.length > 0) {\n            var listTags = []\n            tagList.map((item) => {\n                listTags.push({ value: item, label: item })\n            })\n            this.setState({ listTags })\n\n\n        }\n\n    }\n\n    addTagButtonValue = () => {\n        this.setState({\n            addTagButton: false\n        })\n    }\n\n    // tagInputValueFun = (value) => {\n    //     this.setState({\n    //         tagInputValue : value\n    //     })\n    // }\n\n    descriptionToggle() {\n        this.setState({\n            descriptionEditable: true\n        })\n    }\n\n    componentDidMount() {\n        document.addEventListener('click', this.handleOutsideClick);\n        this.setInitialState();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.modalData !== this.props.modalData) {\n            this.setInitialState();\n        }\n    }\n    setInitialState = () => {\n        const { modalData } = this.props\n        if (modalData && Object.keys(modalData).length > 0) {\n            if (modalData.tags && String(modalData.tags).length > 0) this.setState({ tagString: String(modalData.tags).split(\",\"), content: modalData.postcontent })\n            else this.setState({ tagString: [], content: modalData.postcontent })\n        }\n        this.setState({\n            textAreaHeight: (this.state.content.length / 35).toFixed() * 20\n        })\n    }\n\n    handleOutsideClick = (event) => {\n        if (this.editorEnable && this.editorEnable.current && !this.editorEnable.current.contains(event.target) && (this.editorEnableButton && !this.editorEnableButton.current.contains(event.target)) && this.editorEnableButton && !this.editorEnableButton.current.contains(event.target) !== null) {\n            this.setState({\n                descriptionEditable: false\n            })\n        } else {\n            if (this.editorEnable && this.editorEnable.current && (!this.editorEnable.current.contains(event.target) && this.editorEnable.current.contains(event.target) !== null)) {\n                this.setState({\n                    descriptionEditable: true\n                })\n            }\n        }\n    }\n\n    onClickNewAddTag = event => {\n        const { newTag, tagString } = this.state;\n        const { modalData } = this.props\n\n        if (event.key === 'Enter' || event.keyCode === 13) {\n            if (newTag && String(newTag).length >= 3) {\n                tagString.push(newTag)\n                this.setState({ tagString, newTag: \"\", selectedOption: null, changesStatus: true, addTagButton: true })\n            }\n            else {\n\n            }\n        }\n    }\n\n    addNewTag = event => this.setState({ newTag: event.target.value, changesStatus: true })\n\n    onClickToSave = event => {\n        const { tagString } = this.state;\n        const { modalData } = this.props;\n        if (tagString && tagString.length > 0) {\n            // this.props.postAddTag({\n            //     \"postId\": String(modalData.id),\n            //     \"tags\": tagString.join(\",\")\n            // }, () => this.props.loadAssetsDataWithDispatch()) \n        }\n\n    }\n\n    setNewTags = (selectedOption) => {\n        if (selectedOption && selectedOption.value) this.setState({ newTag: selectedOption.value, selectedOption })\n        else this.setState({ newTag: \"\", selectedOption: null })\n\n\n    };\n\n    onChangeContent = event => {\n        this.setState({ content: event.target.value, changesStatus: true })\n    }\n    onChangeTag = event => {\n        this.setState({ newTag: event.target.value })\n    }\n    onSaveChanges = event => {\n        const { modalData } = this.props;\n        const { tagString, content } = this.state;\n        const data = {\n            \"action\": \"4\",\n            \"source\": String(modalData.collection),\n            \"destination\": String(modalData.collection),\n            \"postId\": String(modalData.id),\n            \"postFile\": modalData.postFile,\n            \"tags\": tagString.join(\",\"),\n            \"content\": content\n        }\n        // this.props.postPostUpdateAction(data, () => {\n        //     this.props.loadAssetsDataWithDispatch()\n        //     this.setState({ descriptionEditable: false, addTagButton: true, changesStatus: false })\n        //     //this.props.editMediaCallback(false)\n        // })\n\n    }\n    onFilterWithTag = (value) => event => {\n        const { modalCallback, tagsFilter } = this.props\n        tagsFilter(value)\n        setTimeout(() => modalCallback(false), 200)\n    }\n\n    contentHeight = (content) => {\n        var contentLines = (content.length / 35)\n        var contentLinesInt = Math.round(contentLines);\n        return contentLines >= contentLinesInt ? (contentLinesInt + 1) * 20 + 20 : contentLinesInt * 20 + 20\n    }\n\n    render() {\n        const { descriptionEditable, addTagButton, tagString, content, changesStatus, newTag } = this.state\n        const { modalData, networkData, collections, isTrash, changeHotspotStatus, enableHotspot, activeCarousalPost, activeCarousalPostsList, carousalPostsList, updateCarousalPost, isShoppable } = this.props\n        const modifiedNetworkId = modalData.networkId == 18 ? 2 : modalData.networkId\n        const socialNetwork = networkData && networkData.length > 0 ? networkData.filter((network) => network.id == modifiedNetworkId) : []\n        return <Tab.Container id=\"modal_aside_\" defaultActiveKey={isShoppable ? \"tag_product\" : \"details\"}>\n            <Nav variant=\"underline\" className='border-bottom'>\n                {isShoppable ? <Nav.Item>\n                    <Nav.Link className='ms-3 py-3' eventKey=\"tag_product\">\n                        <FontAwesomeIcon type={'solid'} icon={'bag-shopping'} iconClass={'me-1 fs-6'} />\n                        Tag products\n                    </Nav.Link>\n                </Nav.Item> : null}\n                <Nav.Item>\n                    <Nav.Link className='ms-3 py-3' eventKey=\"details\">\n                        <FontAwesomeIcon type={'solid'} icon={'image'} iconClass={'me-1 fs-6'} />\n                        Details\n                    </Nav.Link>\n                </Nav.Item>\n            </Nav>\n            <Tab.Content className='m_sideCont_scroll_'>\n                <Tab.Pane eventKey=\"tag_product\">\n                    <TagProducts updateCarousalPost={updateCarousalPost} carousalPostsList={carousalPostsList} activeCarousalPostsList={activeCarousalPostsList} activeCarousalPost={activeCarousalPost} modalData={modalData} changeHotspotStatus={changeHotspotStatus} enableHotspot={enableHotspot} />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"details\">\n                    <div className={`position-relative`}>\n                        <div className='px-4 mt-3'>\n                            <Table className=\"table-borderless mb-0\">\n                                <tbody>\n                                    <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Author</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center mr-2 cursor-pointer\" onClick={modalData.link ? event => window.open(modalData.link, \"_blank\") : null}>\n                                                <Author className={'symbol symbol-34 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                                    imageSize={38}\n                                                    symbolClass={'symbol-label fs-8'}\n                                                    name={modalData.postname} profileUrl={MEDIA_REPLACE_URL(modalData.picture)} networkId={modalData.networkId ? modalData.networkId : 0} />\n                                                <div>\n                                                    <p className=\" mb-0 text-break fw-bold\">{modalData.postname}</p>\n                                                    <small className=\"mb-0 text-muted text-break\">@{modalData.username}</small>\n                                                </div>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Network</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className=\"d-flex align-items-center\">\n                                                <span className=\"me-2 d-flex\">\n                                                {modalData.networkId !=0 ? <img className=\"img-fluid\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(modalData.networkId)}.svg`)} height={18} width={18} alt={modalData.networkId ? modalData.networkId : 0} />:''}\n                                                </span>\n                                                <span className=\"\">{modalData.networkId == 0 ? '': GET_NETWORK_NAME(modalData.networkId)}</span>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Feed name</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            {modalData.feedname && modalData.networkId == 32 ?\n                                                <img className=\"img-fluid me-2\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(32)}.svg`)} height={18} width={18} alt=\"Chrome\" />\n                                                : null}\n                                            <span className=\" text-break\">{modalData.feedname ? ReactHtmlParser(modalData.feedname) : \n                                            modalData.networkId == 0 ? <><img className=\"img-fluid\" src={baseUrl(`media/icons/social-icons/${GET_NETWORK_ICON(0)}.svg`)} height={18} width={18} alt={0} /> Manual Upload </>\n                                            :'--'}</span>\n                                        </td>\n                                    </tr>\n                                    {/* <tr>\n                                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Created</span></td>\n                                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\" text-break\">{moment(modalData.created).utcOffset(0).format(\"DD MMM YYYY hh:mmA\")}</span></td>\n                                            </tr>\n                                            <tr>\n                                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Modified</span></td>\n                                                <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\" text-break\">{moment(modalData.modified).utcOffset(0).format(\"DD MMM YYYY hh:mmA\")}</span></td>\n                                            </tr> */}\n                                    {\n                                        modalData.ugcstatus ? <>\n                                            {modalData.ugcstatus == 2 ? <tr>\n                                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                                <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                                    <div className=\"d-flex align-items-center flex-wrap text-success\">\n                                                        <span className=\"fs-6 me-1\">\n                                                            <FontAwesomeIcon type={'solid'} icon={'user-check'} />\n                                                        </span>\n                                                        <span className=\"fw-medium\">Request Approved</span>\n                                                    </div>\n                                                </td>\n                                            </tr> : modalData.ugcstatus == 1 ? <tr>\n                                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                                <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                                    <div className=\"d-flex align-items-center flex-wrap text-warning\">\n                                                        <span className=\"fs-6 me-1\">\n                                                            <FontAwesomeIcon type={'solid'} icon={'user-clock'} />\n                                                        </span>\n                                                        <span className=\"fw-medium\">Request Pending</span>\n                                                    </div>\n                                                </td>\n                                            </tr> : modalData.ugcstatus == 3 ? <tr>\n                                                <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rights</span></td>\n                                                <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                                    <div className=\"d-flex align-items-center flex-wrap text-danger\">\n                                                        <span className=\"fs-6 me-1\">\n                                                            <FontAwesomeIcon type={'solid'} icon={'user-xmark'} />\n                                                        </span>\n                                                        <span className=\"fw-medium\">Request Rejected</span>\n                                                    </div>\n                                                </td>\n                                            </tr> : null}\n                                        </> : null\n                                    }\n                                    {parseInt(modalData.sentiment) > 0 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Sentiment</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\"> <span className=\" text-break\">\n                                            <span className=\"d-flex fs-8  text-break\">\n                                                <div className='h-16px w-16px me-1 d-flex'>\n                                                    <img className='img-fluid' src={baseUrl(`media/icons/emoji/emoji${SENTIMENTS_CALC(modalData.sentiment).item}.svg`)} height={16} width={16} alt='' />\n                                                </div>\n                                                {SENTIMENTS_CALC(modalData.sentiment).label}\n                                            </span>\n\n                                        </span></td>\n                                    </tr> : null}\n                                    {modalData.recommendation && (modalData.type == 2 || modalData.type == 4) ?\n                                        <tr>\n                                            <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\">\n                                                <p className=\"text-muted mb-1 text-nowrap me-2\">AI Recommendation </p>\n                                                {/* <Image className='invert' src={baseUrl('media/svg/trusense.svg')} height={36} width={110} fluid/> */}\n                                                <span style={{ verticalAlign: \"middle\", fontStyle: \"italic\", fontSize: '11px', color: \"#999\", fontWeight: \"400\" }}>Powered By\n                                                    <img src={`${MediaBaseUrl}media/icons/svg-icons/true-sense.svg`} alt=\"TruSense\" height={16} width={16} className='ms-1'/>\n                                                    <span style={{ verticalAlign: \"middle\", fontSize: '12px', fontStyle: \"normal\", color: \"var(--bs-gray-900)\" }}> TruSense</span>\n                                                </span>\n                                            </td>\n                                            <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                                <div className=\"d-flex align-items-start\">\n                                                    <div className={`h-12px w-12px rounded-circle d-flex flex-shrink-0 mt-1 ${modalData.recommendation.type == 1 ? 'bg-success' : modalData.recommendation.type == 2 ? 'bg-warning' : modalData.recommendation.type == 3 ? 'bg-danger' : null}`}></div>\n                                                    <span className=\" text-break ps-1\">{modalData.recommendation.label} ({modalData.recommendation.score}%)</span>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                        : null}\n                                    {modalData.rating > 0 && modalData.type != 1 ? <tr>\n                                        <td className=\"py-xxl-2 py-1 px-0 min-w-100 w-25\"><span className=\"text-muted\">Rating</span></td>\n                                        <td className=\"py-xxl-2 py-1 px-0 w-75\">\n                                            <div className='d-flex justify-content-start'>\n                                                <Rating className={'fs-6'} iconClass=\"me-1\" rating={modalData.rating}/>\n                                            </div>\n                                        </td>\n                                    </tr>: null}\n                                </tbody>\n                            </Table>\n                        </div>\n                        {tagString && tagString.length > 0 ? <>\n                            <h3 className=\"border-bottom p-4 fs-8\">\n                                <span className=\"fw-medium\">Tag</span>\n                            </h3>\n                            <div className=\"tags-group d-flex align-items-center flex-wrap mb-2\">\n                                <div className='px-4 mt-3'>\n                                    {\n                                        tagString.map((Item, index) => {\n                                            return Item && String(Item).length > 0 ? <Badge key={index} bg=\"\" className={`${index == 99999 ? 'border-gradient' : 'border'}`}>\n                                                <span className=''>{Item}</span>\n                                            </Badge> : null\n\n                                        })\n                                    }\n                                </div>\n                            </div>\n                        </>\n                            : null}\n                        <h3 className=\"border-bottom p-4 fs-8\">\n                            <span className=\"fw-medium\">Description</span>\n                        </h3>\n                        <div className=\"px-4 mb-3\">\n                            <div className=\"d-flex flex-grow-1 pe-2\">\n                                <p style={{ whiteSpace: 'pre-line', wordBreak: 'break-word' }}>{HtmlParser(addLineBreaks(content || \"\"))}</p>\n                            </div>\n                        </div>\n                    </div>\n                </Tab.Pane>\n            </Tab.Content>\n        </Tab.Container>\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        networkData: state?.networks?.networkData,\n        tagList: state?.tags?.tagList,\n        isShoppable: state.authorized?.userData?.user_data?.UserRule?.shoppableStatus\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        // postAddTag: (data, callback) => dispatch(postAddTag(data, callback)),\n        // postPostUpdateAction: (data, calback) => dispatch(postPostUpdateAction(data, calback)),\n        // loadAssetsDataWithDispatch: () => dispatch(loadAssetsDataWithDispatch()),\n        // tagsFilter: (refId) => dispatch(tagsFilter(refId)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentModalAside);\n\n"],"names":["TagProducts","Component","constructor","props","super","setLastSearchTag","this","setState","prevState","loading","productList","handleClickOutsideTagProduct","event","_this$tagProductRef","_this$tagProductRef$c","tagProductRef","current","contains","target","showtags","handleClickOutside","_this$outsideNewRef$c","outsideNewRef","showProd","filterProduct","e","keyword","value","searchText","checkTour","async","_GET_LOCAL","tourStep","GET_LOCAL","isTourComplete","default","appTour","tour","navigate","dispatch","id","SET_LOCAL","step","setTimeout","_tourStep$step","drive","highlight","element","triggerAction","firstClick","selectedTag","prodClick","state","SEARCH_PRODUCTS_TEXT","fetchProductList","modalData","responceApi","referenceId","newMedia","postFile","length","data","removeTag","tagToRemove","updatedSelectedTag","filter","tag","searchTag","productTags","_this$props$modalData","_this$props$modalData2","_this$props$modalData3","product_tags_search","loadingTag","debouncedProductTagsSearch","productTagsSearchLogic","PRODUCT_TAGS_AUTOSEARCH","then","response","responseCode","responseData","catch","error","console","getData_bySelected_Tag","tags","Set","_this$props$modalData4","_this$props$modalData5","_this$props$modalData6","handleScroll","listElement","listRef","getBoundingClientRect","bottom","window","innerHeight","scrolledToBottom","filterProductOnScrolle","addProduct","product","activeCarousalPost","check_hot","postproduct","check_hotspotLocation","location_hotspot","concat","hostpot","productIds","map","item","shopify_product_id","toString","push","TAG_PRODUCT_ACTION","feedId","callbackMsg","firstTime","changePrdId","productId","updateCarousalPost","carousalPostsList","total_pages","currentPage","sentReq","_this$props$modalData7","_this$props$modalData8","_this$props$modalData9","ACTION_PRODUCT_LIST_FORTAG","completedPageCall","callbackRemove","removeTaggProduct","product_sku","checkPermission","REMOVE_TAGGED_PRODUCT_ACTION","clickToShowContact","status","type","showContactUs","tagedprod","errorMsg","visenzeId","visenzeProduct","React","outsideNewRef2","debouncedTriggerAction","debounce","bind","componentDidMount","activeCarousalPostsList","addEventListener","componentWillUnmount","searchTimeout","clearTimeout","removeEventListener","componentDidUpdate","prevProps","_modalData$postproduc","render","_modalData$imageList","changeHotspotStatus","enableHotspot","user","getCarousal","imageList","find","_jsx","className","children","_jsxs","Form","Group","Check","label","defaultValue","onChange","hotspot","checked","reverse","Dropdown","show","align","Toggle","variant","InputGroup","Control","placeholder","ref","autoComplete","onClick","Text","FontAwesomeIcon","icon","style","minHeight","Loader","bg","Menu","overflowX","maxHeight","onScroll","index","_item$product_image","proImage","product_image","includes","Item","ImageType","mediaClass","size","height","width","url","alt","isCover","product_title","product_price","price_currency_symbol","product_discount","textDecoration","recomended","Badge","iconClass","marginRight","Image","src","baseUrl","fluid","shopify_product_type","href","_Fragment","i","Button","_Item$product","_Item$product2","zIndex","maxWidth","discount_currency_symbol","Math","trunc","post_id","ContactModal","onCloseModel","connect","_state$products","_state$products2","_state$products3","_state$ctaData","_state$authorized","_state$authorized$use","_state$authorized$use2","products","searchProducts","loadingTagProduct","moderation","ctaData","authorized","userData","user_data","text","SEARCH_BY_PRODUCTS","payload","page","showPost","search","callBack","getUserInfo_afterChanges","withRouter","ContentModalAside","onClickToRemoveTag","tagString","splice","changesStatus","addTagButtonValue","addTagButton","setInitialState","Object","keys","String","split","content","postcontent","textAreaHeight","toFixed","handleOutsideClick","editorEnable","editorEnableButton","descriptionEditable","onClickNewAddTag","newTag","key","keyCode","selectedOption","addNewTag","onClickToSave","setNewTags","onChangeContent","onChangeTag","onSaveChanges","collection","join","onFilterWithTag","modalCallback","tagsFilter","contentHeight","contentLines","contentLinesInt","round","listTags","componentWillMount","tagList","descriptionToggle","document","networkData","collections","isTrash","isShoppable","modifiedNetworkId","networkId","network","Tab","Container","defaultActiveKey","Nav","Link","eventKey","Content","Pane","Table","link","open","Author","imageSize","symbolClass","name","postname","profileUrl","MEDIA_REPLACE_URL","picture","username","GET_NETWORK_ICON","GET_NETWORK_NAME","feedname","ReactHtmlParser","ugcstatus","parseInt","sentiment","SENTIMENTS_CALC","recommendation","verticalAlign","fontStyle","fontSize","color","fontWeight","MediaBaseUrl","score","rating","Rating","whiteSpace","wordBreak","HtmlParser","addLineBreaks","_state$networks","_state$tags","_state$authorized$use3","networks","UserRule","shoppableStatus"],"sourceRoot":""}