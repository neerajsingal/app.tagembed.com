{"version":3,"file":"static/js/1330.e5820746.chunk.js","mappings":"0RACA,MAAMA,EAAiBC,IAAAA,MAAgB,CAAC,QAAS,QACpCC,EAAgBD,IAAAA,UAAoB,CAACD,EAAgBC,IAAAA,MAAgB,CAChFE,GAAIH,IACFC,IAAAA,MAAgB,CAClBG,GAAIJ,IACFC,IAAAA,MAAgB,CAClBI,GAAIL,IACFC,IAAAA,MAAgB,CAClBK,GAAIN,IACFC,IAAAA,MAAgB,CAClBM,IAAKP,IACHC,IAAAA,S,oKCJEO,EAAY,CAKhBC,GAAIR,IAAAA,OAEJS,KAAMT,IAAAA,OAENU,QAASV,IAAAA,KAETW,MAAOX,IAAAA,KAAeY,WAEtBC,SAAUb,IAAAA,KAQVc,MAAOb,EAEPc,SAAUf,IAAAA,OAEVgB,kBAAmBhB,IAAAA,KAMnBiB,eAAgBjB,IAAAA,OAMhBkB,YAAalB,IAAAA,MAAgB,CAAC,SAM9BmB,KAAMnB,IAAAA,KAENoB,SAAUpB,IAAAA,OAEVqB,QAASrB,IAAAA,OAETsB,KAAMtB,IAAAA,QAYFuB,EAA8BC,EAAAA,YAAiB,CAAAC,EAelDC,KAAG,IAfgD,MACpDf,EAAK,SACLgB,EAAQ,SACRP,EAAQ,eACRH,EAAc,QACdI,EAAO,KACPC,EAAI,SACJP,EAAQ,kBACRC,EAAiB,SACjBH,EAAQ,KACRJ,EAAI,GACJD,EAAE,YACFU,EAAW,KACXC,GAEDM,EADIG,GAAKC,EAAAA,EAAAA,GAAAJ,EAAAK,GAAA,OACcC,EAAAA,EAAAA,MAAMC,EAAAA,GAAQC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACpCP,IAAKA,GACFE,GAAK,IACRD,SAAU,EAAcO,EAAAA,EAAAA,KAAKC,EAAAA,EAAgB,CAC3C3B,GAAIA,EACJC,KAAMA,EACNa,KAAMA,EACND,QAASA,EACTR,SAAUA,EACVuB,cAAehB,EACfO,SAAUhB,KACKuB,EAAAA,EAAAA,KAAKG,EAAAA,EAAc,CAClCC,KAAMvB,EACNwB,cAAevB,EACfC,eAAgBA,EAChBI,QAASH,EACTC,KAAMA,EACNQ,SAAUA,OAEZ,IACFJ,EAAeiB,YAAc,iBAC7BjB,EAAehB,UAAYA,EAC3B,U,uKC5FA,MAAMkC,EAAkB,CAAC,CAAEC,KAAM,UAAWC,KAAM,WAAa,CAAED,KAAM,kBAAmBC,KAAM,cAAgB,CAAED,KAAM,aAAcC,KAAM,WAEtIC,EAAkB,CAAC,CAAEF,KAAM,YAAaC,KAAM,aAAe,CAAED,KAAM,cAAeC,KAAM,cAEhG,MAAME,UAA2BC,EAAAA,UAAUC,WAAAA,GAAA,SAAAC,WAAA,KACvCC,MAAQ,CACJC,SAAS,EACTC,QAAS,GACTC,SAAU,EACVC,eAAe,EACfC,YAAa,GACbC,YAAa,GACbC,QAAS,EACTC,WAAY,EACZC,cAAe,EACfC,WAAY,EACZC,UAAW,EACXC,cAAc,EACdC,SAAS,EACTC,WAAW,EACXC,QAAQ,EACRC,cAAc,EACdC,OAAQ,EACRC,UAAW,EACXC,gBAAiB,GACpB,KAMDC,gBAAkB,KACd,MAAM,SAAEC,EAAQ,OAAEC,GAAWC,KAAK5C,MAC9B2C,GAAUE,OAAOC,KAAKH,GAAQI,OAAS,GAAKJ,EAAO/D,IACnDoE,EAAAA,EAAAA,IAAgBL,EAAO/D,IAAIqE,MAAKC,IAC5B,MAAM,aAAEC,GAAiBD,EAASE,KAClCR,KAAKS,oBAAoBF,EAAa,IACvCG,OAAMC,GAAMX,KAAKY,SAAS,CAAEtB,SAAS,IAAS,WAC9CU,KAAKY,SAAS,CAAElC,WAASoB,GAAsC,IAAzBA,EAASe,cAA6D,KAAvCf,EAASe,aAAaC,eAAsCxB,SAAS,GAAQ,EAC5J,KAEDmB,oBAAuBD,IACnB,MAAM,SAAEO,GAAaf,KAAK5C,MACpB4D,EAASC,EAAAA,EAAYC,MAAMC,OAAOC,SAASC,SAC3C,eAAEC,EAAc,cAAEC,EAAa,QAAEC,EAAO,eAAEC,EAAc,gBAAE7B,GAAoBY,EAAKkB,YAC5E,GAAblB,EAAK1C,KAAYkC,KAAKY,SAAS,CAAElC,UAASuB,OAAOC,KAAKc,GAAQb,OAAS,GAAkBxB,QAAS6B,EAAK,sBAAuBlB,SAAS,EAAOE,QAAQ,IAClJQ,KAAKY,SAAS,CACVlC,SAAS,EACTC,QAAS6B,EAAK,sBACd3B,cAAe4C,EAAe5C,cAE9BC,YAAa2C,EAAe3C,YAAY6C,SAAS,KAAOZ,EAASa,KAAIC,GAAQA,EAAK7F,KAAM+E,EACnFe,QAAOD,GAAQJ,EAAe3C,YAAY6C,SAASI,OAAOF,EAAK7F,OAC/D4F,KAAIC,GAAQA,EAAK7F,KAEtB+C,YAAa0C,EAAe1C,YAAY4C,SAAS,KAAOZ,EAASa,KAAIC,GAAQA,EAAK7F,KAAM+E,EACnFe,QAAOD,GAAQJ,EAAe1C,YAAY4C,SAASI,OAAOF,EAAK7F,OAC/D4F,KAAIC,GAAQA,EAAK7F,KAEtBiD,WAAYuC,EAAQvC,WACpBD,QAASwC,EAAQxC,QACjBU,OAAQ8B,EAAQ9B,OAChBR,cAAeoC,EAAepC,cAC9BC,WAAYmC,EAAenC,WAC3BQ,UAAW4B,EAAc5B,UACzBP,UAAWmC,EAAcnC,UACzBQ,gBAAiBA,EACjBN,SAAS,EACTE,QAAQ,GACV,EACT,KAEDwC,eAAiBC,IAAWjC,KAAKY,SAAS,CAAEjC,QAASsD,EAAMC,OAAOC,MAAO5C,WAAW,EAAMF,cAAc,GAAQ,EAAE,KAElH+C,gBAAkB,CAACC,EAASC,KACxB,IAAI,YAAExD,EAAW,YAAEC,EAAW,YAAEwD,GAAgBvC,KAAKvB,MACvC,GAAV6D,GACIxD,EAAY6C,SAASU,GAAUvD,EAAcA,EAAYgD,QAAOU,GAAOA,GAAOH,IAC7EvD,EAAY2D,KAAKJ,GACtBrC,KAAKY,SAAS,CAAE9B,YAAaA,EAAaS,WAAW,KAEtC,GAAV+C,IACDvD,EAAY4C,SAASU,IACrBtD,EAAcA,EAAY+C,QAAOU,GAAOA,GAAOH,IAC/CvD,EAAcA,EAAYgD,QAAOU,GAAOA,GAAOH,MAG/CtD,EAAY0D,KAAKJ,GACZvD,EAAY6C,SAASU,IAAUvD,EAAY2D,KAAKJ,IAEzDrC,KAAKY,SAAS,CAAE7B,YAAaA,EAAaD,YAAaA,EAAaS,WAAW,IACnF,EACH,KAEDmD,oBAAsB,CAACT,EAAOK,KAC1B,MAAM,SAAEvB,GAAaf,KAAK5C,MACZ,GAAVkF,EACAtC,KAAKY,SAAS,CAAE9B,YAAamD,EAAMC,OAAOS,QAAU5B,EAASa,KAAIgB,GAAiBA,EAAK5G,KAAQ,GAAIuD,WAAW,IAE/F,GAAV+C,GACLtC,KAAKY,SAAS,CAAE9B,YAAamD,EAAMC,OAAOS,QAAU5B,EAASa,KAAIgB,GAAiBA,EAAK5G,KAAQ,GAAIuD,WAAW,EAAMR,YAAakD,EAAMC,OAAOS,QAAU5B,EAASa,KAAIgB,GAAiBA,EAAK5G,KAAQ,IACvM,EACH,KAED6G,gBAAmBZ,IAAYjC,KAAKY,SAAS,CAAE/B,gBAAeoD,EAAMC,OAAOS,QAAwBpD,WAAW,GAAO,EAAE,KAEvHuD,mBAAqB,CAAC3E,EAAMmE,KAEP,GADDtC,KAAKvB,MAAMN,GACP6B,KAAKY,SAAS,CAAE,CAACzC,GAAOmE,IACvCtC,KAAKY,SAAS,CAAE,CAACzC,GAAO6B,KAAKvB,MAAMN,IAASmE,EAAS,EAAIA,GAAS,EAC1E,KAEDS,SAAW,KACH/C,KAAKvB,MAAMc,UACXyD,IAAAA,KAAU,CACN7G,MAAO6D,KAAKvB,MAAMe,OAAS,0BAA4B,gBACvDyD,KAAMjD,KAAKvB,MAAMe,OAAS,iCAAmC,8CAC7D0D,KAAM,UACNC,kBAAkB,EAClBC,kBAAmBpD,KAAKvB,MAAMe,OAAS,kBAAoB,gBAC3D6D,mBAAoBrD,KAAKvB,MAAMe,OAAM,oBAAyB,KAC/Da,MAAMiD,IACDA,EAAOC,aACPvD,KAAK5C,MAAMoG,SAAS,gBACxB,IAGHxD,KAAK5C,MAAMoG,SAAS,gBAAgB,EAC5C,KAEDC,SAAW,KACP,MAAM,QAAE9E,EAAO,YAAEG,EAAW,YAAEC,EAAW,QAAEL,EAAO,OAAEc,GAAWQ,KAAKvB,OAC9D,mBAAEiF,EAAkB,iBAAEC,GAAqB3D,KAAK5C,MACtD,GAAIuB,EAAQiF,OAAOzD,OAAS,IAAK0D,EAAAA,EAAAA,IAAclF,GAAU,CACrD,MAAMmF,EAAQH,EAAiBxD,OAAS,EAAIwD,EAAiB7B,QAAOiC,GAAUA,EAAO,uBAAyBpF,IAAW,GACzH,IAAKa,GAAUsE,EAAM3D,OAAS,GAC1B6D,EAAAA,EAAAA,IAAY,8BAGZ,GAAe,GAAXtF,GAA0C,GAAtBI,EAAYqB,QAAqC,GAAtBpB,EAAYoB,QAAa6D,EAAAA,EAAAA,IAAY,wCACnF,CAEDN,EADgB1D,KAAKiE,iBACO,IAAMjE,KAAK5C,MAAMoG,SAAS,oBAAkBhE,GAAgB,KAC5F,CAGR,MAEQb,EAAQiF,OAAOzD,QAAU,KAAM0D,EAAAA,EAAAA,IAAclF,MAC7CqB,KAAKY,SAAS,CAAEvB,cAAc,KAC9B2E,EAAAA,EAAAA,IAAY,8BAEpB,EAEH,KAEDC,cAAgB,KACZ,MAAM,QAAEvF,EAAO,QAAEC,EAAO,QAAEK,EAAO,OAAEU,EAAM,WAAET,EAAU,cAAEC,EAAa,WAAEC,EAAU,UAAEC,EAAS,UAAEO,EAAS,cAAEd,EAAa,YAAEC,EAAW,YAAEC,EAAW,gBAAEa,GAAoBI,KAAKvB,OACpK,SAAEsC,GAAaf,KAAK5C,MAgC1B,OA9BoBsB,EAAU,CAC1BC,QAASA,EACTC,SAAU,GAEV,CACID,QAASA,EACTC,SAAU,EACVsF,WAAY,CACRzC,eAAgB,CACZ5C,cAAeA,EAAgB,EAAI,EACnCC,YAAaA,EAAYqB,QAAUY,EAASZ,OAAS,IAAM4B,OAAOjD,GAClEC,YAAaA,EAAYoB,QAAUY,EAASZ,OAAS,IAAM4B,OAAOhD,IAEtEyC,QAAS,CACLxC,QAASA,EACTC,WAAYA,EACZS,OAAQA,GAEZ4B,eAAgB,CACZpC,cAAeA,EACfC,WAAYA,GAEhBoC,cAAe,CACXnC,UAAwB,GAAbA,GAA+B,GAAbA,EAAiBA,EAAY,EAC1DO,UAAWA,GAEfC,gBAAiBA,GAIX,CACrB,CApKDuE,iBAAAA,GACInE,KAAKH,iBACT,CAoKAuE,MAAAA,GACI,MAAM,QAAE1F,EAAO,cAAEQ,EAAa,WAAEC,EAAU,cAAEN,EAAa,aAAEQ,EAAY,QAAEC,EAAO,QAAEX,EAAO,OAAEa,EAAM,YAAET,EAAW,YAAED,EAAW,gBAAEc,GAAoBI,KAAKvB,OAChJ,SAAEsC,EAAQ,SAAEjB,GAAaE,KAAK5C,MACpC,OAAOG,EAAAA,EAAAA,MAAA8G,EAAAA,SAAA,CAAAlH,SAAA,EACHO,EAAAA,EAAAA,KAAA,OAAK4G,UAAU,YAAWnH,UACtBO,EAAAA,EAAAA,KAAC6G,EAAAA,EAAS,CAACC,OAAK,EAAArH,UACZI,EAAAA,EAAAA,MAAA,OAAK+G,UAAU,oBAAmBnH,SAAA,EAC9BO,EAAAA,EAAAA,KAAA,OAAK4G,UAAU,WAAUnH,UACrBO,EAAAA,EAAAA,KAAC+G,EAAAA,GAAI,CAACC,GAAI,WAAYJ,UAAU,WAAWnI,MAAM,UAASgB,SAAC,eAE/DO,EAAAA,EAAAA,KAAA,OAAK4G,UAAU,WAAUnH,UACrBO,EAAAA,EAAAA,KAAC+G,EAAAA,GAAI,CAACC,GAAI,gBAAiBJ,UAAU,WAAWnI,MAAM,eAAcgB,SAAC,oBAEzEO,EAAAA,EAAAA,KAAA,OAAK4G,UAAU,WAAUnH,UACrBO,EAAAA,EAAAA,KAAC+G,EAAAA,GAAI,CAACC,GAAI,kBAAmBJ,UAAU,WAAWnI,MAAM,WAAUgB,SAAC,uBAEvEO,EAAAA,EAAAA,KAAA,OAAK4G,UAAU,WAAUnH,UACrBO,EAAAA,EAAAA,KAAC+G,EAAAA,GAAI,CAACC,GAAI,gBAAiBJ,UAAU,kBAAkBnI,MAAM,eAAcgB,SAAC,2BAK5FO,EAAAA,EAAAA,KAAA,OAAK4G,UAAU,oDAAmDnH,UAC9DO,EAAAA,EAAAA,KAAA,OAAK4G,UAAU,YAAWnH,UAEtBO,EAAAA,EAAAA,KAACiH,EAAAA,EAAI,CAACL,UAAU,OAAOM,MAAO,CAAEC,UAAW,uBAAwB1H,SAC9DmC,GAAU5B,EAAAA,EAAAA,KAACoH,EAAAA,EAAM,KACdvH,EAAAA,EAAAA,MAACoH,EAAAA,EAAKI,KAAI,CAACT,UAAU,SAAQnH,SAAA,EAEzBI,EAAAA,EAAAA,MAAA,OAAKqH,MAAO,CAAEC,UAAW,uBAAwB1H,SAAA,EAC7CI,EAAAA,EAAAA,MAAA,OAAK+G,UAAU,0BAAyBnH,SAAA,EACpCO,EAAAA,EAAAA,KAACsH,EAAAA,EAAG,CAACV,UAAU,OAAMnH,UACjBI,EAAAA,EAAAA,MAAC0H,EAAAA,EAAG,CAACpJ,GAAI,EAAGD,GAAI,EAAEuB,SAAA,EACdI,EAAAA,EAAAA,MAAC2H,EAAAA,EAAKC,MAAK,CAACC,QAAQ,YAAWjI,SAAA,CAAC,iBAAaO,EAAAA,EAAAA,KAAA,UAAQ4G,UAAU,cAAanH,SAAC,UAC7EI,EAAAA,EAAAA,MAAA,OAAK+G,UAAU,2BAA0BnH,SAAA,EACrCI,EAAAA,EAAAA,MAAC8H,EAAAA,EAAU,CAACf,UAAU,YAAYM,MAAO,CAAEU,SAAU,KAAMnI,SAAA,EACvDO,EAAAA,EAAAA,KAAC2H,EAAAA,EAAWE,KAAI,CAACjB,UAAU,YAAWnH,UAACO,EAAAA,EAAAA,KAAC8H,EAAAA,GAAe,CAACrH,KAAM,QAAS+E,KAAM,iBAC7ExF,EAAAA,EAAAA,KAACwH,EAAAA,EAAKO,QAAO,CAAC3I,KAAK,KAAK,aAAW,kCAAkC4I,YAAY,sBAAsBC,SAAU3F,KAAKgC,eAAgBG,MAAOxD,EAAS2F,UAAWjF,EAAe,aAAe,KAC9LA,IAAgB3B,EAAAA,EAAAA,KAACwH,EAAAA,EAAKO,QAAQG,SAAQ,CAACzH,KAAK,UAAUmG,UAAU,UAASnH,SAAC,mCAE9E2C,GAAsC,IAAzBA,EAASe,cAA6D,KAAvCf,EAASe,aAAaC,cAI7D,MAJqFvD,EAAAA,EAAAA,MAACR,EAAc,CAACF,QAAQ,oBAAoByH,UAAU,OAAOxH,KAAK,KAAKX,MAAOuC,EAAU,QAAU,UAAUvB,SAAA,EACnMO,EAAAA,EAAAA,KAACF,EAAAA,EAASqI,KAAI,CAAC3J,QAASA,IAAM8D,KAAKY,SAAS,CAAElC,SAAS,IAAQvB,SAAC,WAChEO,EAAAA,EAAAA,KAACF,EAAAA,EAASqI,KAAI,CAAC3J,QAASA,IAAM8D,KAAKY,SAAS,CAAElC,SAAS,IAASvB,SAAC,wBAMjFI,EAAAA,EAAAA,MAACuI,EAAAA,EAAK,CAACjJ,QAAQ,UAAUyH,UAAU,wBAAuBnH,SAAA,EACtDO,EAAAA,EAAAA,KAACoI,EAAAA,EAAMC,QAAO,CAACzB,UAAU,2BAA0BnH,UAC/CO,EAAAA,EAAAA,KAAA,QAAM4G,UAAU,WAAUnH,SACrBuB,EAAU,UAAY,iBAG/BhB,EAAAA,EAAAA,KAAA,KAAG4G,UAAU,oCAAmCnH,SAAEuB,EAAO,6CAAAsH,OAAgDC,EAAAA,IAAY,uJAAAD,OAAwJC,EAAAA,IAAY,2GAG/RvH,EA6JI,MA5JFnB,EAAAA,EAAAA,MAAA8G,EAAAA,SAAA,CAAAlH,SAAA,EACII,EAAAA,EAAAA,MAACyH,EAAAA,EAAG,CAAA7H,SAAA,EACAI,EAAAA,EAAAA,MAAC0H,EAAAA,EAAG,CAACrJ,GAAI,EAAEuB,SAAA,EACPI,EAAAA,EAAAA,MAAA,MAAI+G,UAAU,KAAInH,SAAA,EAACO,EAAAA,EAAAA,KAAC8H,EAAAA,GAAe,CAACtC,KAAM,QAASgD,UAAW,cAAe,oBAAgBxI,EAAAA,EAAAA,KAAA,QAAM4G,UAAU,cAAanH,SAAC,UAC3HI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,CAAG,uKAAqK8I,EAAAA,IAAa,wDAEzLvI,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACrJ,GAAI,EAAEuB,UACPO,EAAAA,EAAAA,KAACiH,EAAAA,EAAI,CAACL,UAAU,mBAAkBnH,UAC9BI,EAAAA,EAAAA,MAACoH,EAAAA,EAAKI,KAAI,CAACT,UAAU,UAASnH,SAAA,EAC1BI,EAAAA,EAAAA,MAAA,OAAK+G,UAAU,wBAAuBnH,SAAA,EAClCO,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACC,QAAM,EAACC,MAAM,mBAAmBnI,KAAK,WAAWoG,UAAU,YAAYnG,KAAM,WAAYnC,GAAE,cAAiB2J,SAAU1D,GAASjC,KAAK0C,oBAAoBT,EAAOlD,EAAYoB,OAAS,GAAKpB,EAAYoB,QAAUrB,EAAYqB,OAAS,EAAI,GAAIwC,QAAS7D,EAAYqB,QAAUY,EAASZ,QAAUY,EAASZ,OAAS,KAC3TzC,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACC,QAAM,EAACC,MAAM,mBAAmBnI,KAAK,WAAWoG,UAAU,YAAYnG,KAAM,WAAYnC,GAAE,cAAiB2J,SAAU1D,GAASjC,KAAK0C,oBAAoBT,EAAO,GAAIU,QAAS5D,EAAYoB,QAAUY,EAASZ,QAAUY,EAASZ,OAAS,KAClPzC,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACC,QAAM,EAACC,MAAM,qBAAqBnI,KAAK,gBAAgBoG,UAAU,YAAYnG,KAAM,WAAYnC,GAAE,gBAAmB2J,SAAU3F,KAAK6C,gBAAiBF,QAAS9D,QAE7KnB,EAAAA,EAAAA,KAACiH,EAAAA,EAAI,CAACL,UAAU,mCAAkCnH,UAC9CO,EAAAA,EAAAA,KAACiH,EAAAA,EAAKI,KAAI,CAACT,UAAU,8BAA6BnH,SAC7C4D,EAASa,KAAIS,IACH9E,EAAAA,EAAAA,MAAA,OAAK+G,UAAU,uEAAsEnH,SAAA,EACxFO,EAAAA,EAAAA,KAAA,OAAK4G,UAAU,kCAAkCM,MAAO,CAAEU,SAAU,sBAAuBnI,UACvFI,EAAAA,EAAAA,MAAA,OAAK+G,UAAU,kCAAiCnH,SAAA,EAC5CO,EAAAA,EAAAA,KAAC4I,EAAAA,EAAY,CAAChC,UAAW,gEACrBiC,UAAW,GACXC,YAAa,+BACbtI,KAAMmE,EAAQnE,KAAMuI,WAAY,GAAIC,UAAW,MACnDnJ,EAAAA,EAAAA,MAAA,OAAK+G,UAAU,uDAAsDnH,SAAA,EACjEO,EAAAA,EAAAA,KAAA,KAAG4G,UAAU,qDAAoDnH,SAAEkF,EAAQnE,QAC3EX,EAAAA,EAAAA,MAAA,QAAM+G,UAAU,0DAAyDnH,SAAA,CAAEkF,EAAQsE,UAAU,qBAIzGpJ,EAAAA,EAAAA,MAAA,OAAiC+G,UAAU,cAAanH,SAAA,EACpDO,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACS,SAAO,EAACR,QAAM,EAACC,MAAM,OAAOnI,KAAK,iBAAiBoG,UAAU,gBAAgBnG,KAAM,WAAYnC,GAAE,sBAAyB2G,QAAS7D,EAAY6C,SAASU,EAAQrG,IAAK2J,SAAUA,IAAM3F,KAAKoC,gBAAgBC,EAAQrG,GAAI+C,EAAY4C,SAASU,EAAQrG,IAAM,EAAI,MACxQ0B,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACS,SAAO,EAACR,QAAM,EAACC,MAAM,OAAOnI,KAAK,iBAAiBC,KAAM,WAAYnC,GAAE,sBAAyB2J,SAAU1D,GAASjC,KAAKoC,gBAAgBC,EAAQrG,GAAI,GAAI2G,UAAS5D,EAAY4C,SAASU,EAAQrG,QAAsB,yBAfrIqG,EAAQrG,qBAyBtIuB,EAAAA,EAAAA,MAACyH,EAAAA,EAAG,CAAA7H,SAAA,EACAI,EAAAA,EAAAA,MAAC0H,EAAAA,EAAG,CAACrJ,GAAI,EAAEuB,SAAA,EACPI,EAAAA,EAAAA,MAAA,MAAI+G,UAAU,KAAInH,SAAA,EAACO,EAAAA,EAAAA,KAAC8H,EAAAA,GAAe,CAACtC,KAAM,eAAgBgD,UAAW,cAAe,sBACpFxI,EAAAA,EAAAA,KAAA,KAAAP,SAAG,gNAEPO,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACrJ,GAAI,EAAEuB,UACPO,EAAAA,EAAAA,KAACiH,EAAAA,EAAI,CAACL,UAAU,mBAAkBnH,UAC9BO,EAAAA,EAAAA,KAACiH,EAAAA,EAAKI,KAAI,CAACT,UAAU,UAASnH,UAC1BO,EAAAA,EAAAA,KAACmJ,EAAAA,EAAK,CAACC,YAAU,EAACC,YAAU,EAACzC,UAAU,OAAMnH,UACzCO,EAAAA,EAAAA,KAAA,SAAAP,UACII,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACIO,EAAAA,EAAAA,KAAA,MAAI4G,UAAU,YAAWnH,SAAC,cAC1BO,EAAAA,EAAAA,KAAA,MAAI4G,UAAU,WAAUnH,UACpBI,EAAAA,EAAAA,MAAA,OAAK+G,UAAU,6BAA4BnH,SAAA,EACvCO,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACS,SAAO,EAACR,QAAM,EAACC,MAAM,OAAOnI,KAAK,YAAYoG,UAAU,gBAAgBnG,KAAM,WAAYnC,GAAE,YAAe2G,QAA4B,GAAnB/C,GAA2C,GAAnBA,EAAqC+F,SAAU1D,GAASjC,KAAK8C,mBAAmB,kBAAsC,GAAnBlD,EAAuB,EAAI,MACrRlC,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACS,SAAO,EAACR,QAAM,EAACC,MAAM,OAAOnI,KAAK,YAAYC,KAAM,WAAYnC,GAAE,YAAe2J,SAAU1D,GAASjC,KAAK8C,mBAAmB,kBAAmB,GAAIH,QAA4B,GAAnB/C,0BAU3MrC,EAAAA,EAAAA,MAACyH,EAAAA,EAAG,CAAA7H,SAAA,EACAI,EAAAA,EAAAA,MAAC0H,EAAAA,EAAG,CAACrJ,GAAI,EAAEuB,SAAA,EACPI,EAAAA,EAAAA,MAAA,MAAI+G,UAAU,KAAInH,SAAA,EAACO,EAAAA,EAAAA,KAAC8H,EAAAA,GAAe,CAACtC,KAAM,cAAegD,UAAW,cAAe,6BACnFxI,EAAAA,EAAAA,KAAA,KAAAP,SAAG,0LAEPO,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACrJ,GAAI,EAAEuB,UACPO,EAAAA,EAAAA,KAACiH,EAAAA,EAAI,CAACL,UAAU,mBAAkBnH,UAC9BO,EAAAA,EAAAA,KAACiH,EAAAA,EAAKI,KAAI,CAACT,UAAU,UAASnH,UAC1BO,EAAAA,EAAAA,KAACmJ,EAAAA,EAAK,CAACC,YAAU,EAACC,YAAU,EAACzC,UAAU,OAAMnH,UACzCO,EAAAA,EAAAA,KAAA,SAAAP,SACKc,EAAgB2D,KAAI,CAACoF,EAAMC,KACjB1J,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACHO,EAAAA,EAAAA,KAAA,MAAI4G,UAAU,YAAWnH,SAAE6J,EAAK9I,QAChCR,EAAAA,EAAAA,KAAA,MAAI4G,UAAU,WAAUnH,UACpBI,EAAAA,EAAAA,MAAA,OAAiB+G,UAAU,6BAA4BnH,SAAA,EACnDO,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACS,SAAO,EAACR,QAAM,EAACC,MAAM,OAAOnI,KAAM8I,EAAK7I,KAAMmG,UAAU,gBAAgBnG,KAAM,WAAYnC,GAAIgL,EAAK7I,KAAMwE,QAAkC,GAAzB3C,KAAKvB,MAAMuI,EAAK7I,OAAuC,GAAzB6B,KAAKvB,MAAMuI,EAAK7I,MAA2BwH,SAAU1D,GAASjC,KAAK8C,mBAAmBkE,EAAK7I,KAA+B,GAAzB6B,KAAKvB,MAAMuI,EAAK7I,MAAa,EAAI,MAC7RT,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACS,SAAO,EAACR,QAAM,EAACC,MAAM,OAAOnI,KAAM8I,EAAK7I,KAAMA,KAAM,WAAYnC,GAAIgL,EAAK7I,KAAMwH,SAAU1D,GAASjC,KAAK8C,mBAAmBkE,EAAK7I,KAAM,GAAIwE,QAAkC,GAAzB3C,KAAKvB,MAAMuI,EAAK7I,UAFvK8I,wBAa9C1J,EAAAA,EAAAA,MAACyH,EAAAA,EAAG,CAAA7H,SAAA,EACAI,EAAAA,EAAAA,MAAC0H,EAAAA,EAAG,CAACrJ,GAAI,EAAEuB,SAAA,EACPI,EAAAA,EAAAA,MAAA,MAAI+G,UAAU,KAAInH,SAAA,EAACO,EAAAA,EAAAA,KAAC8H,EAAAA,GAAe,CAACtC,KAAM,cAAegD,UAAW,cAAe,sBACnFxI,EAAAA,EAAAA,KAAA,KAAAP,SAAG,mLAEPO,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACrJ,GAAI,EAAEuB,UACPO,EAAAA,EAAAA,KAACiH,EAAAA,EAAI,CAACL,UAAU,mBAAkBnH,UAC9BO,EAAAA,EAAAA,KAACiH,EAAAA,EAAKI,KAAI,CAACT,UAAU,UAASnH,UAC1BO,EAAAA,EAAAA,KAACmJ,EAAAA,EAAK,CAACC,YAAU,EAACC,YAAU,EAACzC,UAAU,OAAMnH,UACzCI,EAAAA,EAAAA,MAAA,SAAAJ,SAAA,EACII,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACIO,EAAAA,EAAAA,KAAA,MAAI4G,UAAU,YAAWnH,SAAC,2BAC1BO,EAAAA,EAAAA,KAAA,MAAI4G,UAAU,WAAUnH,UACpBI,EAAAA,EAAAA,MAAA,OAAuC+G,UAAU,6BAA4BnH,SAAA,EACzEO,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACS,SAAO,EAACR,QAAM,EAACC,MAAM,OAAOnI,KAAK,uBAAuBoG,UAAU,gBAAgBnG,KAAM,WAAYnC,GAAE,4BAA+B2G,QAA0B,GAAjBzD,GAAuC,GAAjBA,EAAoByG,SAAUA,IAAM3F,KAAK8C,mBAAmB,gBAAkC,GAAjB5D,EAAqB,EAAI,MACtRxB,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACS,SAAO,EAACR,QAAM,EAACC,MAAM,OAAOnI,KAAK,uBAAuBC,KAAM,WAAYnC,GAAE,4BAA+B2J,SAAU1D,GAASjC,KAAK8C,mBAAmB,gBAAiB,GAAIH,QAA0B,GAAjBzD,MAAsB,mCAIlO3B,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACIO,EAAAA,EAAAA,KAAA,MAAI4G,UAAU,YAAWnH,SAAC,2BAC1BO,EAAAA,EAAAA,KAAA,MAAI4G,UAAU,WAAUnH,UACpBI,EAAAA,EAAAA,MAAA,OAAoC+G,UAAU,6BAA4BnH,SAAA,EACtEO,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACS,SAAO,EAACR,QAAM,EAACC,MAAM,OAAOnI,KAAK,oBAAoBoG,UAAU,gBAAgBnG,KAAM,WAAYnC,GAAE,yBAA4B2G,QAAuB,GAAdxD,GAAiC,GAAdA,EAAiBwG,SAAUA,IAAM3F,KAAK8C,mBAAmB,aAA4B,GAAd3D,EAAkB,EAAI,MACpQzB,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACS,SAAO,EAACR,QAAM,EAACC,MAAM,OAAOnI,KAAK,oBAAoBC,KAAM,WAAYnC,GAAE,yBAA4B2J,SAAU1D,GAASjC,KAAK8C,mBAAmB,aAAc,GAAIH,QAAuB,GAAdxD,MAAmB,8CAU9O5B,EAAAA,EAAAA,MAACyH,EAAAA,EAAG,CAAA7H,SAAA,EACAI,EAAAA,EAAAA,MAAC0H,EAAAA,EAAG,CAACrJ,GAAI,EAAEuB,SAAA,EACPI,EAAAA,EAAAA,MAAA,MAAI+G,UAAU,KAAInH,SAAA,EAACO,EAAAA,EAAAA,KAAC8H,EAAAA,GAAe,CAACtC,KAAM,SAAUgD,UAAW,cAAe,0BAC9ExI,EAAAA,EAAAA,KAAA,KAAAP,SAAG,kOAEPO,EAAAA,EAAAA,KAACuH,EAAAA,EAAG,CAACrJ,GAAI,EAAEuB,UACPO,EAAAA,EAAAA,KAACiH,EAAAA,EAAI,CAACL,UAAU,mBAAkBnH,UAC9BO,EAAAA,EAAAA,KAACiH,EAAAA,EAAKI,KAAI,CAACT,UAAU,UAASnH,UAC1BO,EAAAA,EAAAA,KAACmJ,EAAAA,EAAK,CAACC,YAAU,EAACC,YAAU,EAACzC,UAAU,OAAMnH,UACzCO,EAAAA,EAAAA,KAAA,SAAAP,SACKiB,EAAgBwD,KAAI,CAACoF,EAAMC,KACjB1J,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACHO,EAAAA,EAAAA,KAAA,MAAI4G,UAAU,YAAWnH,SAAE6J,EAAK9I,QAChCR,EAAAA,EAAAA,KAAA,MAAI4G,UAAU,WAAUnH,UACpBI,EAAAA,EAAAA,MAAA,OAAiB+G,UAAU,6BAA4BnH,SAAA,EACnDO,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACS,SAAO,EAACR,QAAM,EAACC,MAAM,OAAOnI,KAAM8I,EAAK7I,KAAMmG,UAAU,gBAAgBnG,KAAM,WAAYnC,GAAIgL,EAAK7I,KAAMwE,QAAkC,GAAzB3C,KAAKvB,MAAMuI,EAAK7I,OAAuC,GAAzB6B,KAAKvB,MAAMuI,EAAK7I,OAA2B,aAAb6I,EAAK7I,KAAoCwH,SAAU1D,GAASjC,KAAK8C,mBAAmBkE,EAAK7I,KAAM,GAAI9B,SAAuB,aAAb2K,EAAK7I,QAC3ST,EAAAA,EAAAA,KAACwH,EAAAA,EAAKiB,MAAK,CAACS,SAAO,EAACR,QAAM,EAACC,MAAM,OAAOnI,KAAM8I,EAAK7I,KAAMA,KAAM,WAAYnC,GAAIgL,EAAK7I,KAAMwH,SAAU1D,GAASjC,KAAK8C,mBAAmBkE,EAAK7I,KAAM,GAAIwE,QAAkC,GAAzB3C,KAAKvB,MAAMuI,EAAK7I,UAFvK8I,8BAgB1DvJ,EAAAA,EAAAA,KAAA,OAAK4G,UAAU,uEAAsEnH,UACjFI,EAAAA,EAAAA,MAAA,OAAK+G,UAAU,eAAcnH,SAAA,EACzBO,EAAAA,EAAAA,KAACwJ,EAAAA,EAAM,CAAC5C,UAAU,mCAAmCpI,QAASA,IAAM8D,KAAK+C,WAAW5F,SAAC,YACrFI,EAAAA,EAAAA,MAAC2J,EAAAA,EAAM,CAACrK,QAAS,UAAWX,QAASA,IAAM8D,KAAKyD,WAAWtG,SAAA,CAAEqC,EAAS,SAAW,SAAS,IAAEd,EAAU,QAAU,6BAQpJ,EAGJ,MAaA,GAAeyI,EAAAA,EAAAA,KAbU1I,IAAW,IAAD2I,EAAAC,EAAAC,EAAAC,EAC/B,MAAO,CACHxG,SAA6B,QAArBqG,EAAE3I,EAAM+I,qBAAa,IAAAJ,GAAe,QAAfC,EAAnBD,EAAqBK,qBAAa,IAAAJ,OAAf,EAAnBA,EAAoCtG,SAC9CjB,SAA0B,QAAlBwH,EAAE7I,EAAMiJ,kBAAU,IAAAJ,GAAU,QAAVC,EAAhBD,EAAkBxH,gBAAQ,IAAAyH,OAAV,EAAhBA,EAA4BI,UACtChE,iBAAkBlF,EAAMoC,aAAa8C,iBACxC,IAGsBiE,IAAQ,CAC/BlE,mBAAoBA,CAACmE,EAASC,EAAUtI,IAAWoI,GAASG,EAAAA,EAAAA,IAAgBF,EAASC,EAAUtI,OAInG,EAA4DwI,EAAAA,EAAAA,GAAW3J,G,wIClc1D,MAAAf,EAAA,8BAMP2K,EAA8BjL,EAAAA,YAAiB,CAAAC,EAKlDC,KAAQ,IAL2C,UACpDoH,EAAS,SACT1H,EACAsL,GAAI5J,EAAY,QAEjBrB,EADIG,GAAKC,EAAAA,EAAAA,GAAAJ,EAAAK,GAGR,OADAV,GAAWuL,EAAAA,EAAAA,IAAmBvL,EAAU,qBACpBc,EAAAA,EAAAA,KAAKY,GAASb,EAAAA,EAAAA,GAAA,CAChCP,IAAKA,EACLoH,UAAW8D,IAAW9D,EAAW1H,IAC9BQ,GACH,IAEJ6K,EAAejK,YAAc,iBAC7B,UCpBaV,EAAA,qDAsBP+H,EAA0BrI,EAAAA,YAAiB,CAAAC,EAQ9CC,KAAQ,IARuC,SAChDN,EAAQ,KACRE,EAAI,cACJuL,EAAa,UACb/D,EAEA4D,GAAI5J,EAAY,OAEjBrB,EADIG,GAAKC,EAAAA,EAAAA,GAAAJ,EAAAK,GAERV,GAAWuL,EAAAA,EAAAA,IAAmBvL,EAAU,eAIxC,MAAM0L,GAAeC,EAAAA,EAAAA,UAAQ,KAAM,CAAG,IAAG,IACzC,OAAoB7K,EAAAA,EAAAA,KAAK8K,EAAAA,EAAkBC,SAAU,CACnDtG,MAAOmG,EACPnL,UAAuBO,EAAAA,EAAAA,KAAKY,GAASb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACnCP,IAAKA,GACFE,GAAK,IACRkH,UAAW8D,IAAW9D,EAAW1H,EAAUE,GAAQ,GAAJkJ,OAAOpJ,EAAQ,KAAAoJ,OAAIlJ,GAAQuL,GAAiB,sBAE7F,IAEJhD,EAAWrH,YAAc,aACzB,QAAeiC,OAAOyI,OAAOrD,EAAY,CACvCE,KAAM0C,EACNU,MAhCsBvL,IAAsBM,EAAAA,EAAAA,KAAKuK,EAAgB,CACjE9K,UAAuBO,EAAAA,EAAAA,KAAKkL,EAAAA,GAAcnL,EAAAA,EAAAA,GAAA,CACxCU,KAAM,SACHf,MA8BLyL,SAvCyBzL,IAAsBM,EAAAA,EAAAA,KAAKuK,EAAgB,CACpE9K,UAAuBO,EAAAA,EAAAA,KAAKkL,EAAAA,GAAcnL,EAAAA,EAAAA,GAAA,CACxCU,KAAM,YACHf,O","sources":["../node_modules/react-bootstrap/esm/types.js","../node_modules/react-bootstrap/esm/DropdownButton.js","app/Layout/Main/Collaborator/ManageCollaborator.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["import PropTypes from 'prop-types';\nconst alignDirection = PropTypes.oneOf(['start', 'end']);\nexport const alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n}), PropTypes.shape({\n  xxl: alignDirection\n}), PropTypes.object]);","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nimport DropdownToggle from './DropdownToggle';\nimport DropdownMenu from './DropdownMenu';\nimport { alignPropType } from './types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string}\n   */\n  id: PropTypes.string,\n  /** An `href` passed to the Toggle component */\n  href: PropTypes.string,\n  /** An `onClick` handler passed to the Toggle component */\n  onClick: PropTypes.func,\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n  /**\n   * Aligns the dropdown menu.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"start\"|\"end\"|{ sm: \"start\"|\"end\" }|{ md: \"start\"|\"end\" }|{ lg: \"start\"|\"end\" }|{ xl: \"start\"|\"end\"}|{ xxl: \"start\"|\"end\"} }\n   */\n  align: alignPropType,\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n  /**\n   * Menu color variant.\n   *\n   * Omitting this will use the default light color.\n   */\n  menuVariant: PropTypes.oneOf(['dark']),\n  /**\n   * Allow Dropdown to flip in case of an overlapping on the reference element. For more information refer to\n   * Popper.js's flip [docs](https://popper.js.org/docs/v2/modifiers/flip/).\n   *\n   */\n  flip: PropTypes.bool,\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n  /** @ignore */\n  variant: PropTypes.string,\n  /** @ignore */\n  size: PropTypes.string\n};\n\n/**\n * A convenience component for simple or general use dropdowns. Renders a `Button` toggle and all `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of\n * [`Dropdown`'s props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._ Only\n * the Button `variant`, `size` and `bsPrefix` props are passed to the toggle,\n * along with menu-related props are passed to the `Dropdown.Menu`\n */\nconst DropdownButton = /*#__PURE__*/React.forwardRef(({\n  title,\n  children,\n  bsPrefix,\n  rootCloseEvent,\n  variant,\n  size,\n  menuRole,\n  renderMenuOnMount,\n  disabled,\n  href,\n  id,\n  menuVariant,\n  flip,\n  ...props\n}, ref) => /*#__PURE__*/_jsxs(Dropdown, {\n  ref: ref,\n  ...props,\n  children: [/*#__PURE__*/_jsx(DropdownToggle, {\n    id: id,\n    href: href,\n    size: size,\n    variant: variant,\n    disabled: disabled,\n    childBsPrefix: bsPrefix,\n    children: title\n  }), /*#__PURE__*/_jsx(DropdownMenu, {\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent,\n    variant: menuVariant,\n    flip: flip,\n    children: children\n  })]\n}));\nDropdownButton.displayName = 'DropdownButton';\nDropdownButton.propTypes = propTypes;\nexport default DropdownButton;","import { Component } from \"react\";\nimport { Alert, Button, Card, Col, Container, Dropdown, DropdownButton, Form, InputGroup, Row, Table } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Loader } from \"../CommonComponents/Loader\";\nimport { connect } from \"react-redux\";\nimport withRouter from \"../../../routes/WithRouter\";\nimport Swal from \"sweetalert2\";\nimport { FontAwesomeIcon } from \"../../../../Assets/AssetsHelper\";\nimport ProfileImage from \"../CommonComponents/ProfileImage/ProfileImage\";\nimport { TOAST_ERROR, validateEmail } from \"../../../../utils\";\nimport { addCollaborator, getCollaborator } from \"../../../../actions/collaboratorActions\";\nimport queryString from 'query-string';\nimport { COMPANY_NAME } from \"../../../../actions/api\";\n\nconst publishHeadings = [{ name: \"Website\", type: \"website\" }, { name: \"Email Campaigns\", type: \"email_camp\" }, { name: \"Shopon.bio\", type: \"shopon\" }]\n\nconst featureHeadings = [{ name: \"Analytics\", type: \"analytics\" }, { name: \"Apps & more\", type: \"apps_more\" }]\n\nclass ManageCollaborator extends Component {\n    state = {\n        isAdmin: true,\n        emailId: \"\",\n        userType: 1,\n        createGallery: false,\n        viewGallery: [],\n        editGallery: [],\n        website: 0,\n        email_camp: 0,\n        manageAccount: 0,\n        manageFeed: 0,\n        analytics: 1,\n        isEmailError: false,\n        loading: true,\n        isChanged: false,\n        isEdit: false,\n        isSuperAdmin: false,\n        shopon: 0,\n        apps_more: 0,\n        product_catalog: 0\n    }\n\n    componentDidMount() {\n        this.checkEditInvite()\n    }\n\n    checkEditInvite = () => {\n        const { userData, params } = this.props\n        if (params && Object.keys(params).length > 0 && params.id) {\n            getCollaborator(params.id).then(response => {\n                const { responseData } = response.data\n                this.getCollaboratorData(responseData)\n            }).catch(ex => this.setState({ loading: false }, () => { }))\n        } else this.setState({ isAdmin: userData && (userData.collaborator == '' || userData.collaborator.activeAccount == \"0\") ? true : false, loading: false })\n    }\n\n    getCollaboratorData = (data) => {\n        const { allWalls } = this.props\n        const parsed = queryString.parse(window.location.search);\n        const { networkManager, otherSettings, publish, contentGallery, product_catalog } = data.permissions\n        data.role == 1 ? this.setState({ isAdmin: Object.keys(parsed).length > 0 ? false : true, emailId: data['UserCollab.emailId'], loading: false, isEdit: true }) :\n            this.setState({\n                isAdmin: false,\n                emailId: data['UserCollab.emailId'],\n                createGallery: contentGallery.createGallery,\n\n                viewGallery: contentGallery.viewGallery.includes(\"0\") ? allWalls.map(item => item.id) : allWalls\n                    .filter(item => contentGallery.viewGallery.includes(String(item.id)))\n                    .map(item => item.id),\n\n                editGallery: contentGallery.editGallery.includes(\"0\") ? allWalls.map(item => item.id) : allWalls\n                    .filter(item => contentGallery.editGallery.includes(String(item.id)))\n                    .map(item => item.id),\n\n                email_camp: publish.email_camp,\n                website: publish.website,\n                shopon: publish.shopon,\n                manageAccount: networkManager.manageAccount,\n                manageFeed: networkManager.manageFeed,\n                apps_more: otherSettings.apps_more,\n                analytics: otherSettings.analytics,\n                product_catalog: product_catalog,\n                loading: false,\n                isEdit: true\n            })\n    }\n\n    onChangeMailId = event => { this.setState({ emailId: event.target.value, isChanged: true, isEmailError: false }) }\n\n    onSelectGallery = (gallery, action) => {\n        let { viewGallery, editGallery, galleryList } = this.state\n        if (action == 1) {\n            if (viewGallery.includes(gallery)) viewGallery = viewGallery.filter(gal => gal != gallery)\n            else viewGallery.push(gallery)\n            this.setState({ viewGallery: viewGallery, isChanged: true })\n        }\n        else if (action == 2) {\n            if (editGallery.includes(gallery)) {\n                editGallery = editGallery.filter(gal => gal != gallery)\n                viewGallery = viewGallery.filter(gal => gal != gallery)\n            }\n            else {\n                editGallery.push(gallery)\n                if (!viewGallery.includes(gallery)) viewGallery.push(gallery)\n            }\n            this.setState({ editGallery: editGallery, viewGallery: viewGallery, isChanged: true })\n        }\n    }\n\n    onSelectAllGallerys = (event, action) => {\n        const { allWalls } = this.props\n        if (action == 1) {\n            this.setState({ viewGallery: event.target.checked ? allWalls.map(wall => { return wall.id }) : [], isChanged: true })\n        }\n        else if (action == 2) {\n            this.setState({ viewGallery: event.target.checked ? allWalls.map(wall => { return wall.id }) : [], isChanged: true, editGallery: event.target.checked ? allWalls.map(wall => { return wall.id }) : [] })\n        }\n    }\n\n    onCreateGallery = (event) => { this.setState({ createGallery: event.target.checked ? true : false, isChanged: true }) }\n\n    onChangePermission = (type, action) => {\n        let stateName = this.state[type];\n        if (stateName == 0) this.setState({ [type]: action })\n        else this.setState({ [type]: this.state[type] == action ? 0 : action })\n    }\n\n    onCancel = () => {\n        if (this.state.isChanged) {\n            Swal.fire({\n                title: this.state.isEdit ? 'Confirming cancellation' : 'Are you sure?',\n                text: this.state.isEdit ? \"All changes will be discarded.\" : \"All selections will be deleted permanently.\",\n                icon: 'warning',\n                showCancelButton: true,\n                confirmButtonText: this.state.isEdit ? 'Yes, Cancel it!' : 'Yes, proceed.',\n                confirmButtonColor: this.state.isEdit ? `var(--bs-success)` : '',\n            }).then((result) => {\n                if (result.isConfirmed) {\n                    this.props.navigate('/collaborator')\n                }\n            })\n        }\n        else this.props.navigate('/collaborator')\n    }\n\n    onSubmit = () => {\n        const { emailId, viewGallery, editGallery, isAdmin, isEdit } = this.state\n        const { createCollaborator, collaboratorList } = this.props\n        if (emailId.trim().length > 0 && validateEmail(emailId)) {\n            const exist = collaboratorList.length > 0 ? collaboratorList.filter(collab => collab['UserCollab.emailId'] == emailId) : []\n            if (!isEdit && exist.length > 0) {\n                TOAST_ERROR(\"Email already exists.\")\n            }\n            else {\n                if (isAdmin == false && viewGallery.length == 0 && editGallery.length == 0) TOAST_ERROR(\"Please select atleast 1 Gallery.\")\n                else {\n                    const payload = this.createPayload()\n                    createCollaborator(payload, () => this.props.navigate('/collaborator'), isEdit ? true : null)\n                }\n            }\n\n        }\n        else {\n            if (emailId.trim().length <= 0 || !validateEmail(emailId)) {\n                this.setState({ isEmailError: true })\n                TOAST_ERROR(\"Enter valid email address.\")\n            }\n        }\n\n    }\n\n    createPayload = () => {\n        const { isAdmin, emailId, website, shopon, email_camp, manageAccount, manageFeed, analytics, apps_more, createGallery, viewGallery, editGallery, product_catalog } = this.state\n        const { allWalls } = this.props\n\n        const payloadData = isAdmin ? {\n            emailId: emailId,\n            userType: 1,\n        } :\n            {\n                emailId: emailId,\n                userType: 2,\n                permission: {\n                    contentGallery: {\n                        createGallery: createGallery ? 2 : 0,\n                        viewGallery: viewGallery.length == allWalls.length ? \"0\" : String(viewGallery),\n                        editGallery: editGallery.length == allWalls.length ? \"0\" : String(editGallery)\n                    },\n                    publish: {\n                        website: website,\n                        email_camp: email_camp,\n                        shopon: shopon,\n                    },\n                    networkManager: {\n                        manageAccount: manageAccount,\n                        manageFeed: manageFeed\n                    },\n                    otherSettings: {\n                        analytics: analytics == 1 || analytics == 2 ? analytics : 1,\n                        apps_more: apps_more\n                    },\n                    product_catalog: product_catalog\n                }\n            }\n\n        return payloadData\n    }\n\n    render() {\n        const { isAdmin, manageAccount, manageFeed, createGallery, isEmailError, loading, emailId, isEdit, editGallery, viewGallery, product_catalog } = this.state\n        const { allWalls, userData } = this.props\n        return <>\n            <div className=\"subheader\">\n                <Container fluid>\n                    <div className=\"nav nav-underline\">\n                        <div className='nav-item'>\n                            <Link to={'/profile'} className=\"nav-link\" title=\"Profile\">Profile</Link>\n                        </div>\n                        <div className='nav-item'>\n                            <Link to={'/transactions'} className=\"nav-link\" title=\"Plan Details\">Plan details</Link>\n                        </div>\n                        <div className='nav-item'>\n                            <Link to={'/social-account'} className=\"nav-link\" title=\"Accounts\">Social accounts</Link>\n                        </div>\n                        <div className='nav-item'>\n                            <Link to={'/collaborator'} className=\"nav-link active\" title=\"Collaborator\">Collaborator</Link>\n                        </div>\n                    </div>\n                </Container>\n            </div>\n            <div className='d-flex flex-column flex-column-fluid full-content'>\n                <div className=\"container\">\n                    {/* <Card className=\"mb-xl-5 mb-4\" style={{minHeight:'calc(100vh - 250px)'}}> */}\n                    <Card className=\"mb-0\" style={{ minHeight: 'calc(100vh - 135px)' }}>\n                        {loading ? <Loader /> :\n                            <Card.Body className=\"p-lg-6\">\n                                {/* <div style={{ minHeight: 'calc(100vh - 330px)' }}> */}\n                                <div style={{ minHeight: 'calc(100vh - 239px)' }}>\n                                    <div className='pb-3 mb-8 border-bottom'>\n                                        <Row className='mb-4'>\n                                            <Col xl={5} lg={6}>\n                                                <Form.Label htmlFor=\"basic-url\">Email address<strong className=\"text-danger\">*</strong></Form.Label>\n                                                <div className=\"d-flex align-items-start\">\n                                                    <InputGroup className=\"mb-3 me-3\" style={{ maxWidth: 600 }}>\n                                                        <InputGroup.Text className='text-dark'><FontAwesomeIcon type={'solid'} icon={'user-plus'} /></InputGroup.Text>\n                                                        <Form.Control size='lg' aria-label=\"Text input with dropdown button\" placeholder='Enter email address' onChange={this.onChangeMailId} value={emailId} className={isEmailError ? 'is-invalid' : ''} />\n                                                        {isEmailError && <Form.Control.Feedback type=\"invalid\" className='d-block'>Enter valid email address.</Form.Control.Feedback>}\n                                                    </InputGroup>\n                                                    {userData && (userData.collaborator == '' || userData.collaborator.activeAccount == \"0\") ? <DropdownButton variant=\"outline-secondary\" className='mb-3' size=\"lg\" title={isAdmin ? 'Admin' : 'Manager'}>\n                                                        <Dropdown.Item onClick={() => this.setState({ isAdmin: true })}>Admin</Dropdown.Item>\n                                                        <Dropdown.Item onClick={() => this.setState({ isAdmin: false })}>Manager</Dropdown.Item>\n                                                    </DropdownButton>\n                                                        : null}\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                        <Alert variant=\"primary\" className='border border-primary'>\n                                            <Alert.Heading className='f-center alert_icon_head'>\n                                                <span className='f-center'>\n                                                    {isAdmin ? \"Admin *\" : \"Manager *\"}\n                                                </span>\n                                            </Alert.Heading>\n                                            <p className=\"fw-medium mb-0 fs-8 text-gray-700\">{isAdmin ? `The Admin role enjoys full access to the  ${COMPANY_NAME}, allowing them to perform all functionalities and allowing them to add other managers.` : `The Manager role, in contrast, has limited access to the ${COMPANY_NAME} and its functionalities. Their access is determined by the permissions they have been granted.`}</p>\n                                        </Alert>\n                                    </div>\n                                    {!isAdmin ?\n                                        <>\n                                            <Row>\n                                                <Col lg={4}>\n                                                    <h4 className=\"h5\"><FontAwesomeIcon icon={'image'} iconClass={'me-1 fs-6'} />Content Gallery <span className=\"text-danger\">*</span></h4>\n                                                    <p>Collect posts from your preferred social channels in a curated content gallery. Moderate and modify the content, turn it shoppable and request rights directly from {COMPANY_NAME} to leverage it on your marketing touchpoints.</p>\n                                                </Col>\n                                                <Col lg={8}>\n                                                    <Card className='mb-6 shadow-none'>\n                                                        <Card.Body className='p-xxl-6'>\n                                                            <div className=\"mb-2 d-flex flex-wrap\">\n                                                                <Form.Check inline label=\"View All Gallery\" name=\"vGallery\" className=\"me-3 mb-2\" type={'checkbox'} id={`inline-view`} onChange={event => this.onSelectAllGallerys(event, editGallery.length > 0 && editGallery.length == viewGallery.length ? 2 : 1)} checked={viewGallery.length == allWalls.length && allWalls.length > 0 ? true : false} />\n                                                                <Form.Check inline label=\"Edit All Gallery\" name=\"eGallery\" className=\"me-3 mb-2\" type={'checkbox'} id={`inline-edit`} onChange={event => this.onSelectAllGallerys(event, 2)} checked={editGallery.length == allWalls.length && allWalls.length > 0 ? true : false} />\n                                                                <Form.Check inline label=\"Create New Gallery\" name=\"createGallery\" className=\"me-3 mb-2\" type={'checkbox'} id={`inline-create`} onChange={this.onCreateGallery} checked={createGallery} />\n                                                            </div>\n                                                            <Card className='mb-0 shadow-none overflow-hidden'>\n                                                                <Card.Body className='pe-lg-4 ps-lg-6 bg-gray-100'>\n                                                                    {allWalls.map(gallery => {\n                                                                        return <div className='d-flex align-items-center justify-content-between py-2 border-bottom' key={gallery.id}>\n                                                                            <div className=\"d-flex align-items-center w-100\" style={{ maxWidth: 'calc(100% - 150px)' }}>\n                                                                                <div className=\"d-flex align-items-center w-100\">\n                                                                                    <ProfileImage className={'symbol symbol-38 rounded-2 flex-shrink-0 me-2 overflow-hidden'}\n                                                                                        imageSize={38}\n                                                                                        symbolClass={'symbol-label fs-6 bg-primary'}\n                                                                                        name={gallery.name} profileUrl={''} networkId={''} />\n                                                                                    <div className=\"overflow-hidden w-100 d-flex flex-grow-1 flex-column\">\n                                                                                        <p className=\"text-gray-dark fw-semibold mb-0 text-ellipsis fs-8\">{gallery.name}</p>\n                                                                                        <span className=\"fs-9 mb-0 text-gray-500 fw-medium text-ellipsis d-block\">{gallery.totalPost} Posts</span>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                            <div key={`gallery-action-view`} className=\"my-2 d-flex\">\n                                                                                <Form.Check reverse inline label=\"View\" name=\"gallery_action\" className=\"me-3 me-xl-10\" type={'checkbox'} id={`gallery-action-view`} checked={viewGallery.includes(gallery.id)} onChange={() => this.onSelectGallery(gallery.id, editGallery.includes(gallery.id) ? 2 : 1)} />\n                                                                                <Form.Check reverse inline label=\"Edit\" name=\"gallery_action\" type={'checkbox'} id={`gallery-action-edit`} onChange={event => this.onSelectGallery(gallery.id, 2)} checked={editGallery.includes(gallery.id) ? true : false} />\n                                                                            </div>\n                                                                        </div>\n                                                                    })}\n                                                                </Card.Body>\n                                                            </Card>\n                                                        </Card.Body>\n                                                    </Card>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col lg={4}>\n                                                    <h4 className=\"h5\"><FontAwesomeIcon icon={'bag-shopping'} iconClass={'me-1 fs-6'} />Product catalog</h4>\n                                                    <p>It is a list of products you can sync across platforms (Shopify, WooCommerce, Magento), including essential details like descriptions, images, and pricing to help customers make purchasing decisions.</p>\n                                                </Col>\n                                                <Col lg={8}>\n                                                    <Card className='mb-6 shadow-none'>\n                                                        <Card.Body className='p-xxl-6'>\n                                                            <Table borderless responsive className='mb-0'>\n                                                                <tbody>\n                                                                    <tr>\n                                                                        <td className='fw-medium'>Products</td>\n                                                                        <td className='text-end'>\n                                                                            <div className=\"d-flex justify-content-end\">\n                                                                                <Form.Check reverse inline label=\"View\" name=\"prod-view\" className=\"me-3 me-xl-10\" type={'checkbox'} id={`prod-view`} checked={product_catalog == 2 || product_catalog == 1 ? true : false} onChange={event => this.onChangePermission('product_catalog', product_catalog == 2 ? 2 : 1)} />\n                                                                                <Form.Check reverse inline label=\"Edit\" name=\"prod-edit\" type={'checkbox'} id={`prod-edit`} onChange={event => this.onChangePermission('product_catalog', 2)} checked={product_catalog == 2 ? true : false} />\n                                                                            </div>\n                                                                        </td>\n                                                                    </tr>\n                                                                </tbody>\n                                                            </Table>\n                                                        </Card.Body>\n                                                    </Card>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col lg={4}>\n                                                    <h4 className=\"h5\"><FontAwesomeIcon icon={'paper-plane'} iconClass={'me-1 fs-6'} />Publishing touchpoints</h4>\n                                                    <p>Seamlessly publish your curated assets, such as shoppable UGC galleries, and shop the looks on websites, product pages, email campaigns, and within social bios with Shopon.bio. </p>\n                                                </Col>\n                                                <Col lg={8}>\n                                                    <Card className='mb-6 shadow-none'>\n                                                        <Card.Body className='p-xxl-6'>\n                                                            <Table borderless responsive className='mb-0'>\n                                                                <tbody>\n                                                                    {publishHeadings.map((head, index) => {\n                                                                        return <tr>\n                                                                            <td className='fw-medium'>{head.name}</td>\n                                                                            <td className='text-end'>\n                                                                                <div key={index} className=\"d-flex justify-content-end\">\n                                                                                    <Form.Check reverse inline label=\"View\" name={head.type} className=\"me-3 me-xl-10\" type={'checkbox'} id={head.type} checked={this.state[head.type] == 2 || this.state[head.type] == 1 ? true : false} onChange={event => this.onChangePermission(head.type, this.state[head.type] == 2 ? 2 : 1)} />\n                                                                                    <Form.Check reverse inline label=\"Edit\" name={head.type} type={'checkbox'} id={head.type} onChange={event => this.onChangePermission(head.type, 2)} checked={this.state[head.type] == 2 ? true : false} />\n                                                                                </div>\n                                                                            </td>\n                                                                        </tr>\n                                                                    })}\n                                                                </tbody>\n                                                            </Table>\n                                                        </Card.Body>\n                                                    </Card>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col lg={4}>\n                                                    <h4 className=\"h5\"><FontAwesomeIcon icon={'grid-2-plus'} iconClass={'me-1 fs-6'} />Network manager</h4>\n                                                    <p>The Network manager, accessible via your My profile tab, enables you to explore Social Accounts. You can add up to 5 social networks to expand your professional network. </p>\n                                                </Col>\n                                                <Col lg={8}>\n                                                    <Card className='mb-6 shadow-none'>\n                                                        <Card.Body className='p-xxl-6'>\n                                                            <Table borderless responsive className='mb-0'>\n                                                                <tbody>\n                                                                    <tr>\n                                                                        <td className='fw-medium'>Add & Manage Accounts</td>\n                                                                        <td className='text-end'>\n                                                                            <div key={`socialAccount-action-view`} className=\"d-flex justify-content-end\">\n                                                                                <Form.Check reverse inline label=\"View\" name=\"socialAccount_action\" className=\"me-3 me-xl-10\" type={'checkbox'} id={`socialAccount-action-view`} checked={manageAccount == 2 || manageAccount == 1} onChange={() => this.onChangePermission('manageAccount', manageAccount == 2 ? 2 : 1)} />\n                                                                                <Form.Check reverse inline label=\"Edit\" name=\"socialAccount_action\" type={'checkbox'} id={`socialAccount-action-edit`} onChange={event => this.onChangePermission('manageAccount', 2)} checked={manageAccount == 2} />\n                                                                            </div>\n                                                                        </td>\n                                                                    </tr>\n                                                                    <tr>\n                                                                        <td className='fw-medium'>Create & Manage feeds</td>\n                                                                        <td className='text-end'>\n                                                                            <div key={`connection-action-view`} className=\"d-flex justify-content-end\">\n                                                                                <Form.Check reverse inline label=\"View\" name=\"connection_action\" className=\"me-3 me-xl-10\" type={'checkbox'} id={`connection-action-view`} checked={manageFeed == 1 || manageFeed == 2} onChange={() => this.onChangePermission('manageFeed', manageFeed == 2 ? 2 : 1)} />\n                                                                                <Form.Check reverse inline label=\"Edit\" name=\"connection_action\" type={'checkbox'} id={`connection-action-edit`} onChange={event => this.onChangePermission('manageFeed', 2)} checked={manageFeed == 2} />\n                                                                            </div>\n                                                                        </td>\n                                                                    </tr>\n                                                                </tbody>\n                                                            </Table>\n                                                        </Card.Body>\n                                                    </Card>\n                                                </Col>\n                                            </Row>\n                                            <Row>\n                                                <Col lg={4}>\n                                                    <h4 className=\"h5\"><FontAwesomeIcon icon={'grid-2'} iconClass={'me-1 fs-6'} />Additional features</h4>\n                                                    <p>Additional features include Style Studio for branding, Auto-Moderation, and Creators and Insights for content management. For a comprehensive suite of tools, you'll also find All Access, Apps and More, and Analytics. </p>\n                                                </Col>\n                                                <Col lg={8}>\n                                                    <Card className='mb-6 shadow-none'>\n                                                        <Card.Body className='p-xxl-6'>\n                                                            <Table borderless responsive className='mb-0'>\n                                                                <tbody>\n                                                                    {featureHeadings.map((head, index) => {\n                                                                        return <tr>\n                                                                            <td className='fw-medium'>{head.name}</td>\n                                                                            <td className='text-end'>\n                                                                                <div key={index} className=\"d-flex justify-content-end\">\n                                                                                    <Form.Check reverse inline label=\"View\" name={head.type} className=\"me-3 me-xl-10\" type={'checkbox'} id={head.type} checked={this.state[head.type] == 2 || this.state[head.type] == 1 || head.type == 'analytics' ? true : false} onChange={event => this.onChangePermission(head.type, 2)} disabled={head.type == \"analytics\"} />\n                                                                                    <Form.Check reverse inline label=\"Edit\" name={head.type} type={'checkbox'} id={head.type} onChange={event => this.onChangePermission(head.type, 2)} checked={this.state[head.type] == 2 ? true : false} />\n                                                                                </div>\n                                                                            </td>\n                                                                        </tr>\n                                                                    })}\n                                                                </tbody>\n                                                            </Table>\n                                                        </Card.Body>\n                                                    </Card>\n                                                </Col>\n                                            </Row>\n                                        </>\n                                        : null}\n                                </div>\n                                <div className=\"d-flex justify-content-end align-items-center flex-wrap mt-3 mt-lg-4\">\n                                    <div className=\"block-center\">\n                                        <Button className=\"btn btn-secondary btn-min-w me-3\" onClick={() => this.onCancel()}>Cancel</Button>\n                                        <Button variant={'primary'} onClick={() => this.onSubmit()}>{isEdit ? \"Update\" : \"Create\"} {isAdmin ? 'admin' : 'manager'}</Button>\n                                    </div>\n                                </div>\n                            </Card.Body>}\n                    </Card>\n                </div>\n            </div>\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        allWalls: state.dashboardData?.dashboarddata?.allWalls,\n        userData: state.authorized?.userData?.user_data,\n        collaboratorList: state.collaborator.collaboratorList,\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    createCollaborator: (payload, callback, isEdit) => dispatch(addCollaborator(payload, callback, isEdit)),\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ManageCollaborator))","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"names":["alignDirection","PropTypes","alignPropType","sm","md","lg","xl","xxl","propTypes","id","href","onClick","title","isRequired","disabled","align","menuRole","renderMenuOnMount","rootCloseEvent","menuVariant","flip","bsPrefix","variant","size","DropdownButton","React","_ref","ref","children","props","_objectWithoutProperties","_excluded","_jsxs","Dropdown","_objectSpread","_jsx","DropdownToggle","childBsPrefix","DropdownMenu","role","renderOnMount","displayName","publishHeadings","name","type","featureHeadings","ManageCollaborator","Component","constructor","arguments","state","isAdmin","emailId","userType","createGallery","viewGallery","editGallery","website","email_camp","manageAccount","manageFeed","analytics","isEmailError","loading","isChanged","isEdit","isSuperAdmin","shopon","apps_more","product_catalog","checkEditInvite","userData","params","this","Object","keys","length","getCollaborator","then","response","responseData","data","getCollaboratorData","catch","ex","setState","collaborator","activeAccount","allWalls","parsed","queryString","parse","window","location","search","networkManager","otherSettings","publish","contentGallery","permissions","includes","map","item","filter","String","onChangeMailId","event","target","value","onSelectGallery","gallery","action","galleryList","gal","push","onSelectAllGallerys","checked","wall","onCreateGallery","onChangePermission","onCancel","Swal","text","icon","showCancelButton","confirmButtonText","confirmButtonColor","result","isConfirmed","navigate","onSubmit","createCollaborator","collaboratorList","trim","validateEmail","exist","collab","TOAST_ERROR","createPayload","permission","componentDidMount","render","_Fragment","className","Container","fluid","Link","to","Card","style","minHeight","Loader","Body","Row","Col","Form","Label","htmlFor","InputGroup","maxWidth","Text","FontAwesomeIcon","Control","placeholder","onChange","Feedback","Item","Alert","Heading","concat","COMPANY_NAME","iconClass","Check","inline","label","ProfileImage","imageSize","symbolClass","profileUrl","networkId","totalPost","reverse","Table","borderless","responsive","head","index","Button","connect","_state$dashboardData","_state$dashboardData$","_state$authorized","_state$authorized$use","dashboardData","dashboarddata","authorized","user_data","dispatch","payload","callback","addCollaborator","withRouter","InputGroupText","as","useBootstrapPrefix","classNames","hasValidation","contextValue","useMemo","InputGroupContext","Provider","assign","Radio","FormCheckInput","Checkbox"],"sourceRoot":""}