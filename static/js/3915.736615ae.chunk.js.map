{"version":3,"file":"static/js/3915.736615ae.chunk.js","mappings":"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","sources":["app/Layout/Main/Content/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport SubHeaderCrumbs from '../CommonComponents/SubHeader'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Card, Col, Container, Dropdown, Form, OverlayTrigger, Row, Tooltip } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '../../../../Assets/AssetsHelper'\nimport EmptyWithIcon from '../CommonComponents/Empty/EmptyWithIcon'\nimport { useNavigate } from 'react-router-dom'\nimport AddContentModal from '../CommonComponents/ContentSwitcher/AddContentModal'\nimport { GALLERY_WALL_UPDATE } from '../../../../actions/sceneActions'\nimport { Loader } from '../CommonComponents/Loader'\nimport Swal from 'sweetalert2'\nimport { shopifyApp, switchWarning } from '../../../../utils'\nimport CustomToolTip from '../CommonComponents/CustomToolTip'\nimport Author from '../CommonComponents/Author/Author'\nimport queryString from 'query-string'\nimport NetworkIconsSection from '../CommonComponents/NetworkIconsSection'\nimport { FILTER_LOADER_UPDATE, UPDATE_DASHBOARD_DATA } from '../../../../reducer/keys'\nimport { GET_FEEDS } from '../../../../actions/manageFeedsAction'\nimport { checkPermission } from '../../../../actions/collaboratorActions'\nimport SortBy from '../CommonComponents/SortBy'\nimport { GET_ALL_WEBSITE_LIST } from '../../../../actions/websiteAction'\n\nfunction Content() {\n    const [toggleG, setToggleG] = useState(false)\n    const { wallsLoader } = useSelector(state => state?.dashboardData)\n    const [editContent, setEditContent] = useState([]);\n    const [spinner, setSpinner] = useState(false)\n    const [apiError, setApiError] = useState(false)\n    const allWalls = useSelector(state => state.dashboardData?.dashboarddata?.allWalls)\n    const webList =  useSelector(state => state.websiteList?.websiteList)\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const addGallery = () => {\n        setToggleG(true)\n    }\n\n    const handleEdit = (item) => {\n        setToggleG(true)\n        setEditContent(item)\n    }\n\n    const callback = (msg) => {\n        setSpinner(false);\n        if (msg) setApiError(msg)\n        else {\n            setToggleG(false);\n            setEditContent([])\n        }\n    }\n\n    const deleteContent = (item) => {\n        Swal.fire({\n            title: \"Are You Sure?\",\n            text: 'You are about to delete a Gallery that is used in Publish. Deleting the gallery would also delete the corresponding Publish sections.',\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"Cancel\",\n            confirmButtonText: \"Yes, Delete it\",\n        }).then((result) => {\n            if (result.value) {\n                dispatch(GALLERY_WALL_UPDATE({ name: item.name, status: item.status, autoUpdate: item.autoUpdate || 0, id: item.id, deleted: 0, action: 3 }, null, callback))\n            }\n            else if (result.dismiss === \"cancel\") { }\n        });\n    }\n\n    // const isGalleryNameExist = (galleryName) => allWalls?.some(wall => wall?.name?.toLowerCase() === galleryName?.toLowerCase());\n\n    // const onAddGallery = (name, autoUpdate, status) => {\n    //     const galleryName = name?.trim();\n\n    //     if (isGalleryNameExist(galleryName)) {\n    //         setApiError(\"Gallery name already exists.\");\n    //         return;\n    //     }\n\n    //     if (galleryName) {\n    //         setSpinner(true);\n    //         dispatch(GALLERY_WALL_UPDATE({ name: galleryName, status, carouselPost: 0, autoUpdate: autoUpdate || 0, deleted: 0, id: '', action: 1 }, navigate, callback));\n    //     }\n    // };\n\n    const onUpdate = (id, galleryName, status, autoupdate, carouselPost) => {\n        if (galleryName && galleryName.length > 0) {\n            setSpinner(true)\n            dispatch(GALLERY_WALL_UPDATE({ name: galleryName?.trim(), carouselPost: carouselPost || 0, status: status, id: id, autoUpdate: autoupdate || 0, deleted: 0, action: 2 }, null, callback))\n        }\n    }\n\n    const changeToggles = (data) => {\n        const [item, type, val] = data\n        dispatch(GALLERY_WALL_UPDATE({ name: item.name, carouselPost: item.carouselPost, status: type == 'status' ? val : item.status, autoUpdate: type == 'auto' ? val : item.autoUpdate || 0, id: item.id, deleted: 0, action: 2 }, null, null, true))\n    }\n\n    const openGallery = (id, feed, posts) => {\n        localStorage.setItem('wallId', id)\n        if (feed || posts) {\n            //dispatch({ type: FILTER_LOADER_UPDATE, payload: true });\n            dispatch(GET_FEEDS());\n            setTimeout(() => {\n                navigate(`/content/moderation/${id}`)\n            }, 100);\n        } else navigate(`/content/addfeed/${id}`)\n    }\n\n    const sortData = (data) => {\n        dispatch({ type: UPDATE_DASHBOARD_DATA, payload: data });\n    }\n\n    useEffect(() => {\n        const result = queryString.parse(window.location.search);\n        if (result && result.addGallery) setToggleG(true)\n        if(!webList?.length) dispatch(GET_ALL_WEBSITE_LIST(true))\n    }, [])\n\n    return <>\n        <SubHeaderCrumbs\n            crumbs={[\n                { name: \"Content Gallery\", link: \"/content\", icon: \"image\" },\n                { name: \"Home\", link: \"/home\" },\n                { name: \"Content Gallery\", link: \"/content\" }\n            ]} crumbIcon=\"image\" />\n\n\n        <Container className={shopifyApp() ? \"\" : \"container-content-gallery\"} style={{ maxWidth: '100%' }}>\n            <Row className=\"mb-4\">\n                <Col md={6}>\n                    {/* <h2 className=\"h4 mb-1\">Content</h2>\n                    <p className=\"fs-8 text-muted mb-0\">Choose the Gallery to manage your content</p> */}\n                    <h2 className=\"h4 mb-1\">Content</h2>\n                    <p className=\"fs-8 text-muted mb-0\">Choose and manage your content to publish, or create a new one to get started.</p>\n                </Col>\n                <Col md={6} className='mt-md-0 mt-3'>\n                    <div className=\"d-flex justify-content-md-end mb-3\">\n                        {allWalls?.length > 10 ? <SortBy {...{ action: sortData, data: allWalls }} /> : null}\n                        <Button style={{ backgroundColor: 'var(--bs-body-bg)' }} size=\"md\" variant=\"secondary\" aria-label='Add Channel' onClick={() => checkPermission('contentGallery', 'createGallery', true) ? addGallery() : {}}>\n                            <FontAwesomeIcon type={'solid'} icon={\"plus\"} /> Add New Gallery\n                        </Button>\n                    </div>\n                </Col>\n            </Row>\n            <div className='w-100 sync_products'>\n                {wallsLoader ? <Loader />\n                    : allWalls?.length ?\n                        <Row className='mx-0 mx-n3'>\n                            {allWalls.map((item, index) => {\n                                return (\n                                    <Col xl={3} lg={4} md={6} sm={6} key={index} className=\"gutter-b\">\n                                        <Card id={`${item.icon}_btn_`} className='publish-card h-100 cursor-pointer' onClick={(e) => !e.target.closest('.dropdown') ? openGallery(item?.id, item?.totalFeed, item?.totalPost) : {}}>\n                                            <div className=\"position-absolute top-0 end-0 mt-3 me-2\" >\n                                                <Dropdown>\n                                                    <OverlayTrigger placement=\"top\" overlay={<Tooltip>Options</Tooltip>}>\n                                                        <Dropdown.Toggle variant='secondary' aria-label='more' className=\"arrow_disabled dropdown-toggle border-0 d-inline-flex py-1 px-3\">\n                                                            <FontAwesomeIcon icon={'ellipsis-vertical'} size={20} iconClass={'me-0'} />\n                                                        </Dropdown.Toggle>\n                                                    </OverlayTrigger>\n                                                    <Dropdown.Menu>\n                                                        <Dropdown.Item onClick={() => handleEdit(item)} className={'fs-8'}>\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'edit'} /></span>\n                                                            Rename\n                                                        </Dropdown.Item>\n                                                        <Dropdown.Item onClick={() => webList.length == 1 && webList[0]?.wall?.ThemeInfo?.wallId == item?.id ? navigate(`/website/publish/${webList[0]?.wall?.ThemeInfo?.webId}`) : navigate(`/publish/${item?.id}`)} className={'fs-8'}>\n                                                            <span className='me-2 fs-8'><FontAwesomeIcon type={'solid'} icon={'paper-plane'} /></span>\n                                                            Publish\n                                                        </Dropdown.Item>\n                                                        <Dropdown.Item onClick={() => deleteContent(item)} className={'fs-8'}>\n                                                            <span className='me-2'><FontAwesomeIcon type={'solid'} icon={'trash-can'} /></span>\n                                                            Delete\n                                                        </Dropdown.Item>\n                                                        <div className=\"dropdown-item d-flex justify-content-between align-items-center\" onClick={(e) => e.stopPropagation()}>\n                                                            <Form.Label htmlFor='cont_a_u' className=\"mb-0 fs-8\">Auto update</Form.Label>\n                                                            <Form.Check type=\"switch\" id=\"cont_a_u\" checked={item?.autoUpdate}\n                                                                onChange={() => item?.autoUpdate ? switchWarning('Disabling auto-update will prevent new posts from being fetched, limiting the content while existing posts remain accessible.', changeToggles, [item, 'auto', Number(!item?.autoUpdate)]) : changeToggles([item, 'auto', Number(!item?.autoUpdate)])}\n                                                            />\n                                                        </div>\n                                                        <div className=\"dropdown-item d-flex justify-content-between align-items-center\" onClick={(e) => e.stopPropagation()}>\n                                                            <Form.Label htmlFor='cont_s' className=\"mb-0 fs-8\">Status</Form.Label>\n                                                            <Form.Check type=\"switch\" id=\"cont_s\" checked={item?.status}\n                                                                onChange={() => item?.status ? switchWarning('Disabling this status will hide all collected posts from this feed, affecting visibility and content access.', changeToggles, [item, 'status', Number(!item?.status)]) : changeToggles([item, 'status', Number(!item?.status)])}\n                                                            />\n                                                        </div>\n                                                    </Dropdown.Menu>\n                                                </Dropdown>\n                                            </div>\n                                            <Card.Body className='flex-column f-center px-3 py-0'>\n                                                <div className=\"d-flex w-100 flex-wrap\">\n                                                    <div className='d-flex align-items-center'>\n                                                        <Author imageSize={40} symbolClass={'symbol-label'}\n                                                            className={'symbol symbol-54 fs-2 rounded-2 flex-shrink-0 me-2 overflow-hidden'}\n                                                            name={item.name} profileUrl={item.thumbnail} networkId={28} />\n                                                        <div className=\"publish-detail d-flex flex-column ms-2\">\n                                                            <strong className=\"h4 mb-0 pe-3 custom-truncate-1 text-capitalize\">{item?.name}</strong>\n                                                            <span className='fs-9 text-capitalize'>{item?.totalPost} Posts | {item?.totalFeed || 0} Feeds</span>\n                                                        </div>\n                                                    </div>\n                                                    <div className={`content-foot mt-5 align-items-center d-flex justify-content-between w-100`}>\n                                                        {item?.networkIds?.length ? <NetworkIconsSection networkList={item?.networkIds} /> :\n                                                            <div>\n                                                                <span className='me-2 btn btn-sm bg-secondary border'>\n                                                                    <FontAwesomeIcon type={'regular'} iconClass={'me-0'} icon={'grid-2-plus'} />\n                                                                    <span className=\"ms-2 \">Add Feeds</span>\n                                                                </span>\n                                                            </div>\n                                                        }\n                                                        <div>\n                                                            <CustomToolTip cssClName=\"light\" overlayText=\"Edit\">\n                                                                <span onClick={(e) => openGallery(item?.id, item?.totalFeed)} className='me-2 btn btn-sm bg-secondary border'>\n                                                                    <FontAwesomeIcon type={'solid'} iconClass={'me-0'} icon={'edit'} />\n                                                                </span>\n                                                            </CustomToolTip>\n                                                            <CustomToolTip cssClName=\"light\" overlayText=\"Publish\">\n                                                                <span onClick={(e) => { e.stopPropagation(); webList.length == 1 && webList[0]?.wall?.ThemeInfo?.wallId == item?.id ? navigate(`/website/publish/${webList[0]?.wall?.ThemeInfo?.webId}`) : navigate(`/publish/${item?.id}`) }} className='me-2 btn btn-sm bg-secondary border'>\n                                                                    <FontAwesomeIcon type={'solid'} iconClass={'me-0'} icon={'paper-plane'} />\n                                                                </span>\n                                                            </CustomToolTip>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </Card.Body>\n                                        </Card>\n                                    </Col>\n                                )\n                            })}\n                        </Row>\n                        :\n                        <div className=\"f-center\" style={{ minHeight: 'calc(100vh - 240px)' }}>\n                            <EmptyWithIcon\n                                title=\"Uh-oh! Nothing to see here.\"\n                                desc={'You can start adding new channels here.'}\n                                icon={'media'}\n                                button={{ text: 'Add Gallery', action: addGallery }}\n                                isFullScreen={false}\n                            />\n                        </div>\n                }\n            </div>\n        </Container >\n\n        {toggleG &&\n            // <AddGallery \n            //     show={toggleG} \n            //     handleClose={() => {\n            //         setToggleG(false)\n            //         setIsEdit(false)\n            //     }} \n            //     title={\"Channel To Publish\"} \n            //     navigate={navigate} \n            //     isEdit={isEdit} \n            //     editData={editData} \n            //     updateData={updateData} \n            // />\n            <AddContentModal show={toggleG} apiError={apiError} setApiError={setApiError} title=\"Gallery\" onUpdate={onUpdate} editContent={editContent} handleClose={() => { setEditContent([]); setToggleG(false); setApiError('') }} deleteContent={deleteContent} spinner={spinner} setSpinner={setSpinner} statusKey={true} callback={callback} navigate={navigate} />\n        }\n    </>\n}\nexport default Content"],"names":["toggleG","setToggleG","useState","wallsLoader","useSelector","state","dashboardData","editContent","setEditContent","spinner","setSpinner","apiError","setApiError","allWalls","_state$dashboardData","_state$dashboardData$","dashboarddata","webList","_state$websiteList","websiteList","navigate","useNavigate","dispatch","useDispatch","addGallery","callback","msg","deleteContent","item","Swal","title","text","icon","showCancelButton","cancelButtonText","confirmButtonText","then","result","value","GALLERY_WALL_UPDATE","name","status","autoUpdate","id","deleted","action","dismiss","changeToggles","data","type","val","carouselPost","openGallery","feed","posts","localStorage","setItem","GET_FEEDS","setTimeout","concat","useEffect","queryString","parse","window","location","search","length","GET_ALL_WEBSITE_LIST","_jsxs","_Fragment","children","_jsx","SubHeaderCrumbs","crumbs","link","crumbIcon","Container","className","shopifyApp","style","maxWidth","Row","Col","md","SortBy","UPDATE_DASHBOARD_DATA","payload","Button","backgroundColor","size","variant","onClick","checkPermission","FontAwesomeIcon","Loader","map","index","_item$networkIds","xl","lg","sm","Card","e","target","closest","totalFeed","totalPost","Dropdown","OverlayTrigger","placement","overlay","Tooltip","Toggle","iconClass","Menu","Item","handleEdit","_webList$","_webList$$wall","_webList$$wall$ThemeI","_webList$2","_webList$2$wall","_webList$2$wall$Theme","wall","ThemeInfo","wallId","webId","stopPropagation","Form","Label","htmlFor","Check","checked","onChange","switchWarning","Number","Body","Author","imageSize","symbolClass","profileUrl","thumbnail","networkId","networkIds","NetworkIconsSection","networkList","CustomToolTip","cssClName","overlayText","_webList$3","_webList$3$wall","_webList$3$wall$Theme","_webList$4","_webList$4$wall","_webList$4$wall$Theme","minHeight","EmptyWithIcon","desc","button","isFullScreen","AddContentModal","show","onUpdate","galleryName","autoupdate","trim","handleClose","statusKey"],"sourceRoot":""}