{"version":3,"file":"static/js/628.e90df2a8.chunk.js","mappings":"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","sources":["app/Layout/Main/Collaborator/Collaborator.js"],"sourcesContent":["import { Component } from \"react\";\nimport { Badge, Button, Card, Container, Dropdown, OverlayTrigger, Table, Tooltip } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ProfileImage from \"../CommonComponents/ProfileImage/ProfileImage\";\nimport moment from \"moment\";\nimport { Loader } from \"../CommonComponents/Loader\";\nimport { FontAwesomeIcon } from \"../../../../Assets/AssetsHelper\";\nimport EmptyWithIcon from \"../CommonComponents/Empty/EmptyWithIcon\";\nimport { connect } from \"react-redux\";\nimport { deleteCollaborator, getCollaboratorList, updatePermission, updateStatus } from \"../../../../actions/collaboratorActions\";\nimport { GET_COLLABORATOR_LIST } from \"../../../../reducer/keys\";\nimport Swal from \"sweetalert2\";\nimport withRouter from \"../../../routes/WithRouter\";\nimport { TOAST_ERROR } from \"../../../../utils\";\nimport TabHeading from \"../AccountInfo/TabHeading\";\n\n\nconst rowHeadings = [{ name: \"Collaborator\", width: 160 }, { name: \"Invited\", width: 130 }, { name: \"Status\", width: 100 }, { name: \"Permission\", width: 100 }, { name: \"Invited By\", width: 120 }, { name: \"Actions\", width: 70 }]\nclass Collaborator extends Component {\n\n    state = {\n        loading: true,\n        userRole: null\n\n    }\n\n    componentDidMount() {\n        const { userData } = this.props\n        if (userData) this.getCollaborators(userData)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        const { userData } = nextProps\n        if (JSON.stringify(userData) != JSON.stringify(this.props.userData)) this.getCollaborators(userData)\n    }\n\n    getCollaborators = (userData) => {\n        const { setCollaboratorList } = this.props\n        getCollaboratorList().then(response => {\n            const userType = userData.collaborator == '' || userData.collaborator.activeAccount == 0 ? 3 : 0\n            const { workspace } = response.data.responseData\n            setCollaboratorList(workspace)\n            this.setState({ loading: false, userRole: userType })\n        }).catch(ex => { this.setState({ loading: false }, () => { }) })\n    }\n\n    modifyCollaborator = (value, type) => {\n        const { updateCollaboratorPermission, deleteCollaborator } = this.props\n        Swal.fire({\n            title: 'Are you sure?',\n            text: type == \"delete\" ? \"Do you wish to continue and delete the chosen item?\" : \"Modifying this setting will lead to alterations in permissions.\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonText: type == \"delete\" ? \"Yes, delete it!\" : 'Yes, change permission!',\n            confirmButtonColor: type != \"delete\" ? `var(--bs-success)` : '',\n        }).then((result) => {\n            if (result.isConfirmed) type == \"delete\" ? deleteCollaborator({ collaborators: String(value) }) : updateCollaboratorPermission(value)\n        })\n    }\n\n    render() {\n        const { loading, userRole } = this.state\n        const { collaboratorList, userData } = this.props\n        return <TabHeading userData={userData} crumbs={[{ name: \"Collaborator\", link: \"/home\", icon: \"grid-2\", imgUrl: userData?.user?.picture }, { name: \"Home\", link: \"/Home\" }, { name: \"Collaborator\" }]}>\n            <Container className=\"container-collaborator\">\n                <Card>\n                    <Card.Header className='f-between d-flex'>\n                        <h2 className=\"me-2 h4 my-3\">Collaborator panel</h2>\n                        <div className=\"f-center\">\n                            <Link to={'/collaborator/add'} className=\"btn btn-primary my-2 btn-sm\" title=\"Invite Collaborator\">\n                                <FontAwesomeIcon icon={'plus'} />\n                            Invite collaborator\n                        </Link>\n                    </div>\n                </Card.Header>\n                <Card.Body style={{ height: 'calc(100vh - 255px)', overflowY: 'auto' }}>\n                    <div style={{ minHeight: 'calc(100vh - 287px)' }}>\n                        {loading ? <Loader /> : collaboratorList.length > 0 ?\n                            <div className=\"table-responsive\">\n                                <Table size='lg' className=\"align-middle gs-0 gy-3\">\n                                    <thead className=\"thead-light\">\n                                        <tr>\n                                            {rowHeadings.map((head, index) => { return <th key={index} className={`fw-bold text-nowrap ${head.name == \"Actions\" ? \"text-end\" : \"\"}`} style={{ minWidth: head.width }}>{head.name}</th> })}\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {collaboratorList.map(collaborator => {\n                                            return <tr>\n                                                <td>\n                                                    <div className=\"d-flex align-items-center\">\n                                                        <ProfileImage className={'symbol symbol-40 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                                            imageSize={40}\n                                                            symbolClass={'symbol-label fs-6 bg-primary'}\n                                                            name={collaborator['UserCollab.name']} profileUrl={collaborator['UserCollab.picture']} networkId={''} />\n                                                        <div className=\"overflow-hidden\" style={{ maxWidth: 200 }}>\n                                                            <p className=\"text-gray-dark fw-semibold mb-0 text-ellipsis fs-8\">{collaborator['UserCollab.name']}</p>\n                                                            <span className=\"fs-9 mb-0 text-gray-500 fw-medium text-ellipsis d-block\">{collaborator['UserCollab.emailId']}</span>\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                                <td>\n                                                    <p className=\"text-gray-900 fw-medium mb-0 text-nowrap\">{moment(collaborator['UserCollab.created']).format(\"Do MMM YYYY\")}</p>\n                                                    <span className=\"fs-9 fw-medium text-gray-500 text-nowrap\">{moment.utc(new Date(collaborator['UserCollab.created'])).format(\"h:mm a\")}</span>\n                                                </td>\n                                                <td>\n                                                    {collaborator.status != 2 ?\n                                                        <label className=\"form-check form-switch\">\n                                                            <input className=\"form-check-input\" type=\"checkbox\" checked={collaborator.status == 1} onChange={() => this.props.updateStatus(collaborator)} />\n                                                        </label>\n                                                        :\n                                                        <Badge bg=\"\" className=\"badge-light-warning\">Pending</Badge>\n                                                    }\n                                                </td>\n                                                <td>\n                                                    <div className=\"d-flex align-items-center\">\n\n                                                        {userRole == 3 ? <Dropdown style={{ minWidth: 200 }}>\n                                                            <Dropdown.Toggle variant=\"secondary\" className=\"d-flex align-items-center w-100 justify-content-between bg-white fs-9\">\n                                                                {collaborator.role == 1 ? \"Admin\" : \"Manager\"}\n                                                            </Dropdown.Toggle>\n                                                            <Dropdown.Menu className=\"w-100\">\n                                                                <Dropdown.Item key={0} onClick={() => collaborator.role == 1 ? TOAST_ERROR(\"Collaborator is already an admin.\") : this.modifyCollaborator(collaborator, \"change\")}>Admin</Dropdown.Item>\n                                                                <Dropdown.Item key={1} onClick={() => collaborator.role == 2 ? TOAST_ERROR(\"Collaborator is already a manager.\") : this.props.navigate(`/collaborator/edit/${collaborator.id}?permission=1`)}>Manager</Dropdown.Item>\n                                                            </Dropdown.Menu>\n                                                        </Dropdown> : collaborator.role == 1 ? \"Admin\" : \"Manager\"}\n                                                    </div>\n                                                </td>\n                                                <td>\n                                                    <div className=\"d-flex align-items-center cursor-pointer text-decoration-none\">\n                                                        <ProfileImage className={'symbol symbol-36 rounded-circle flex-shrink-0 me-2 overflow-hidden'}\n                                                            imageSize={36}\n                                                            symbolClass={'symbol-label fs-6 bg-primary'}\n                                                            name={collaborator['UserAdmin.name']} profileUrl={collaborator['UserAdmin.picture']} />\n                                                        <p className=\"text-gray-dark fw-medium mb-0 text-ellipsis\">{collaborator['UserAdmin.name']}</p>\n                                                    </div>\n                                                </td>\n                                                <td className=\"pr-0 text-end\">\n                                                    <div className=\"d-flex align-items-center justify-content-end\">\n                                                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit</Tooltip>}>\n                                                            <Link to={`/collaborator/edit/${collaborator.id}`} id={`col-edit-${collaborator.id}`} className={`btn btn-icon btn-sm btn-active-primary ms-2`} title=\"Edit Collaborator\">\n                                                                <FontAwesomeIcon type=\"solid\" icon={'pen'} />\n                                                            </Link>\n                                                        </OverlayTrigger>\n                                                        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Remove</Tooltip>}>\n                                                            <Button id={`col-remove-${collaborator.id}`} variant=\"icon\" size='sm' className={`btn-active-danger ms-2`} aria-label=\"delete\" onClick={() => this.modifyCollaborator(collaborator.id, \"delete\")}>\n                                                                <FontAwesomeIcon type=\"solid\" icon={'trash-can'} />\n                                                            </Button>\n                                                        </OverlayTrigger>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        })}\n                                    </tbody>\n                                </Table>\n                            </div>\n                            :\n                            <div className=\"f-center\" style={{ minHeight: 'calc(100vh - 260px)' }}>\n                                <EmptyWithIcon title=\"Uh-oh! Nothing to see here.\" desc={'You can start adding new collaborators here.'} icon={'user-plus'} button={{ text: 'Invite Collaborator', action: () => this.props.navigate('/collaborator/add') }} isFullScreen={false} />\n                            </div>\n                        }\n\n                    </div>\n                </Card.Body>\n            </Card>\n        </Container>\n        </TabHeading>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        collaboratorList: state.collaborator.collaboratorList,\n        userData: state.authorized?.userData?.user_data\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    deleteCollaborator: (id) => dispatch(deleteCollaborator(id)),\n    setCollaboratorList: (workspace) => dispatch({ type: GET_COLLABORATOR_LIST, payload: workspace }),\n    updateCollaboratorPermission: (collaborator) => dispatch(updatePermission(collaborator)),\n    updateStatus: (collaborator) => dispatch(updateStatus(collaborator))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Collaborator))"],"names":["rowHeadings","name","width","Collaborator","Component","constructor","arguments","state","loading","userRole","getCollaborators","userData","setCollaboratorList","this","props","getCollaboratorList","then","response","userType","collaborator","activeAccount","workspace","data","responseData","setState","catch","ex","modifyCollaborator","value","type","updateCollaboratorPermission","deleteCollaborator","Swal","title","text","icon","showCancelButton","confirmButtonText","confirmButtonColor","result","isConfirmed","collaborators","String","componentDidMount","componentWillReceiveProps","nextProps","JSON","stringify","render","_userData$user","collaboratorList","_jsx","TabHeading","crumbs","link","imgUrl","user","picture","children","Container","className","_jsxs","Card","Header","Link","to","FontAwesomeIcon","Body","style","height","overflowY","minHeight","Loader","length","Table","size","map","head","index","concat","minWidth","ProfileImage","imageSize","symbolClass","profileUrl","networkId","maxWidth","moment","format","Date","status","checked","onChange","updateStatus","Badge","bg","Dropdown","Toggle","variant","role","Menu","Item","onClick","TOAST_ERROR","navigate","id","OverlayTrigger","placement","overlay","Tooltip","Button","EmptyWithIcon","desc","button","action","isFullScreen","connect","_state$authorized","_state$authorized$use","authorized","user_data","dispatch","GET_COLLABORATOR_LIST","payload","updatePermission","withRouter"],"sourceRoot":""}